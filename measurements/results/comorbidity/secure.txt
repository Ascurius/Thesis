### arithmetic

Starting cmd=numactl --membind=0 --cpunodebind=0 -- measurements/measure_secure.sh comorbidity
Running performance test for secure query: comorbidity
Generating test data...
Measure performance for 100 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 0 comorbidity -pn 11180 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 1 comorbidity -pn 11180 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 2 comorbidity -pn 11180 -h localhost
Using statistical security parameter 40
Trying to run 64-bit computation
Executing comorbidity with 100 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 6.597e-06
Stopped timer 10 at 0.000367843 (0.0104 MB, 2 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.342e-06
Stopped timer 100 at 3.378e-06 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.042e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 9.49e-07
Stopped timer 300 at 0.076481 (1.4752 MB, 2311 rounds)
Stopped timer 200 at 0.127116 (1.65389 MB, 3905 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.609e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.099e-06
Stopped timer 500 at 0.0479564 (0.945664 MB, 1468 rounds)
Stopped timer 400 at 0.0480553 (0.945664 MB, 1468 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.755e-06
Stopped timer 600 at 0.0512177 (0.3208 MB, 1602 rounds)
The following benchmarks are including preprocessing (offline phase).
Time = 0.227467 seconds 
Time10 = 0.000367843 seconds (0.0104 MB, 2 rounds)
Time100 = 3.378e-06 seconds (0 MB, 0 rounds)
Time200 = 0.127116 seconds (1.65389 MB, 3905 rounds)
Time300 = 0.076481 seconds (1.4752 MB, 2311 rounds)
Time400 = 0.0480553 seconds (0.945664 MB, 1468 rounds)
Time500 = 0.0479564 seconds (0.945664 MB, 1468 rounds)
Time600 = 0.0512177 seconds (0.3208 MB, 1602 rounds)
Data sent = 2.93075 MB in ~6977 rounds (party 0 only; use '-v' for more details)
Global data sent = 8.77146 MB (all parties)
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_split(3)
Done
Measure performance for 200 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 0 comorbidity -pn 16272 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 1 comorbidity -pn 16272 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 2 comorbidity -pn 16272 -h localhost
Using statistical security parameter 40
Trying to run 64-bit computation
Executing comorbidity with 200 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 3.697e-06
Stopped timer 10 at 0.000629946 (0.0208 MB, 3 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.358e-06
Stopped timer 100 at 5.128e-06 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 9.76e-07
Stopped timer 300 at 0.0898038 (2.8672 MB, 2313 rounds)
Stopped timer 200 at 0.189056 (3.22509 MB, 5509 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.689e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.063e-06
Stopped timer 500 at 0.0545052 (1.88726 MB, 1470 rounds)
Stopped timer 400 at 0.0546777 (1.88726 MB, 1470 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.778e-06
Stopped timer 600 at 0.0986217 (0.7184 MB, 3206 rounds)
The following benchmarks are including preprocessing (offline phase).
Time = 0.343759 seconds 
Time10 = 0.000629946 seconds (0.0208 MB, 3 rounds)
Time100 = 5.128e-06 seconds (0 MB, 0 rounds)
Time200 = 0.189056 seconds (3.22509 MB, 5509 rounds)
Time300 = 0.0898038 seconds (2.8672 MB, 2313 rounds)
Time400 = 0.0546777 seconds (1.88726 MB, 1470 rounds)
Time500 = 0.0545052 seconds (1.88726 MB, 1470 rounds)
Time600 = 0.0986217 seconds (0.7184 MB, 3206 rounds)
Data sent = 5.85155 MB in ~10188 rounds (party 0 only; use '-v' for more details)
Global data sent = 17.5131 MB (all parties)
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_split(3)
Done
Measure performance for 300 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 0 comorbidity -pn 11339 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 1 comorbidity -pn 11339 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 2 comorbidity -pn 11339 -h localhost
Using statistical security parameter 40
Trying to run 64-bit computation
Executing comorbidity with 300 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 4.63e-06
Stopped timer 10 at 0.000921617 (0.0312 MB, 4 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.351e-06
Stopped timer 100 at 7.248e-06 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.71e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 1.803e-06
Stopped timer 300 at 0.10121 (4.19315 MB, 2313 rounds)
Stopped timer 200 at 0.253211 (4.82138 MB, 7113 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.798e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.079e-06
Stopped timer 500 at 0.0611932 (2.75923 MB, 1470 rounds)
Stopped timer 400 at 0.061435 (2.75923 MB, 1470 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.662e-06
Stopped timer 600 at 0.154643 (1.2143 MB, 4812 rounds)
The following benchmarks are including preprocessing (offline phase).
Time = 0.471186 seconds 
Time10 = 0.000921617 seconds (0.0312 MB, 4 rounds)
Time100 = 7.248e-06 seconds (0 MB, 0 rounds)
Time200 = 0.253211 seconds (4.82138 MB, 7113 rounds)
Time300 = 0.10121 seconds (4.19315 MB, 2313 rounds)
Time400 = 0.061435 seconds (2.75923 MB, 1470 rounds)
Time500 = 0.0611932 seconds (2.75923 MB, 1470 rounds)
Time600 = 0.154643 seconds (1.2143 MB, 4812 rounds)
Data sent = 8.82611 MB in ~13399 rounds (party 0 only; use '-v' for more details)
Global data sent = 26.4159 MB (all parties)
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_split(3)
Done
Measure performance for 400 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 0 comorbidity -pn 13551 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 1 comorbidity -pn 13551 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 2 comorbidity -pn 13551 -h localhost
Using statistical security parameter 40
Trying to run 64-bit computation
Executing comorbidity with 400 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 4.106e-06
Stopped timer 10 at 0.00131284 (0.0416 MB, 6 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 2.263e-06
Stopped timer 100 at 1.266e-05 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.982e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 1.719e-06
Stopped timer 300 at 0.124651 (5.58874 MB, 2315 rounds)
Stopped timer 200 at 0.333826 (6.39974 MB, 8717 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 2.612e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 2.113e-06
Stopped timer 500 at 0.0761308 (3.70442 MB, 1472 rounds)
Stopped timer 400 at 0.0764603 (3.70442 MB, 1472 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.735e-06
Stopped timer 600 at 0.212809 (1.61907 MB, 6416 rounds)
The following benchmarks are including preprocessing (offline phase).
Time = 0.625449 seconds 
Time10 = 0.00131284 seconds (0.0416 MB, 6 rounds)
Time100 = 1.266e-05 seconds (0 MB, 0 rounds)
Time200 = 0.333826 seconds (6.39974 MB, 8717 rounds)
Time300 = 0.124651 seconds (5.58874 MB, 2315 rounds)
Time400 = 0.0764603 seconds (3.70442 MB, 1472 rounds)
Time500 = 0.0761308 seconds (3.70442 MB, 1472 rounds)
Time600 = 0.212809 seconds (1.61907 MB, 6416 rounds)
Data sent = 11.7648 MB in ~16611 rounds (party 0 only; use '-v' for more details)
Global data sent = 35.2113 MB (all parties)
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_split(3)
Done
Measure performance for 500 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 0 comorbidity -pn 14752 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 1 comorbidity -pn 14752 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 2 comorbidity -pn 14752 -h localhost
Using statistical security parameter 40
Trying to run 64-bit computation
Executing comorbidity with 500 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 4.926e-06
Stopped timer 10 at 0.00146174 (0.052 MB, 7 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.259e-06
Stopped timer 100 at 1.0111e-05 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.02e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 1.003e-06
Stopped timer 300 at 0.149517 (6.98432 MB, 2317 rounds)
Stopped timer 200 at 0.419832 (8.0585 MB, 10323 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.761e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.176e-06
Stopped timer 500 at 0.0786419 (4.56922 MB, 1472 rounds)
Stopped timer 400 at 0.0790473 (4.56922 MB, 1472 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 2.187e-06
Stopped timer 600 at 0.261802 (1.94346 MB, 8018 rounds)
The following benchmarks are including preprocessing (offline phase).
Time = 0.763236 seconds 
Time10 = 0.00146174 seconds (0.052 MB, 7 rounds)
Time100 = 1.0111e-05 seconds (0 MB, 0 rounds)
Time200 = 0.419832 seconds (8.0585 MB, 10323 rounds)
Time300 = 0.149517 seconds (6.98432 MB, 2317 rounds)
Time400 = 0.0790473 seconds (4.56922 MB, 1472 rounds)
Time500 = 0.0786419 seconds (4.56922 MB, 1472 rounds)
Time600 = 0.261802 seconds (1.94346 MB, 8018 rounds)
Data sent = 14.6232 MB in ~19820 rounds (party 0 only; use '-v' for more details)
Global data sent = 43.7655 MB (all parties)
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_split(3)
Done
Measure performance for 600 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 0 comorbidity -pn 16566 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 1 comorbidity -pn 16566 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 2 comorbidity -pn 16566 -h localhost
Using statistical security parameter 40
Trying to run 64-bit computation
Executing comorbidity with 600 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 5.787e-06
Stopped timer 10 at 0.00176737 (0.0624 MB, 8 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.341e-06
Stopped timer 100 at 1.1616e-05 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.043e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 9.5e-07
Stopped timer 300 at 0.154711 (8.3799 MB, 2319 rounds)
Stopped timer 200 at 0.459041 (9.63686 MB, 11927 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 2.681e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.072e-06
Stopped timer 500 at 0.0968157 (5.5144 MB, 1474 rounds)
Stopped timer 400 at 0.0976354 (5.5144 MB, 1474 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 3.184e-06
Stopped timer 600 at 0.308894 (2.34822 MB, 9622 rounds)
The following benchmarks are including preprocessing (offline phase).
Time = 0.868641 seconds 
Time10 = 0.00176737 seconds (0.0624 MB, 8 rounds)
Time100 = 1.1616e-05 seconds (0 MB, 0 rounds)
Time200 = 0.459041 seconds (9.63686 MB, 11927 rounds)
Time300 = 0.154711 seconds (8.3799 MB, 2319 rounds)
Time400 = 0.0976354 seconds (5.5144 MB, 1474 rounds)
Time500 = 0.0968157 seconds (5.5144 MB, 1474 rounds)
Time600 = 0.308894 seconds (2.34822 MB, 9622 rounds)
Data sent = 17.5619 MB in ~23031 rounds (party 0 only; use '-v' for more details)
Global data sent = 52.5609 MB (all parties)
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_split(3)
Done
Measure performance for 700 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 0 comorbidity -pn 18945 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 1 comorbidity -pn 18945 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 2 comorbidity -pn 18945 -h localhost
Using statistical security parameter 40
Trying to run 64-bit computation
Executing comorbidity with 700 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 4.593e-06
Stopped timer 10 at 0.00248327 (0.0728 MB, 10 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 2.437e-06
Stopped timer 100 at 1.6139e-05 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.159e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 1.045e-06
Stopped timer 300 at 0.166493 (9.77549 MB, 2321 rounds)
Stopped timer 200 at 0.52472 (11.2152 MB, 13531 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.772e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.149e-06
Stopped timer 500 at 0.0932774 (6.45958 MB, 1476 rounds)
Stopped timer 400 at 0.093852 (6.45958 MB, 1476 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 2.036e-06
Stopped timer 600 at 0.380331 (2.75299 MB, 11226 rounds)
The following benchmarks are including preprocessing (offline phase).
Time = 1.00268 seconds 
Time10 = 0.00248327 seconds (0.0728 MB, 10 rounds)
Time100 = 1.6139e-05 seconds (0 MB, 0 rounds)
Time200 = 0.52472 seconds (11.2152 MB, 13531 rounds)
Time300 = 0.166493 seconds (9.77549 MB, 2321 rounds)
Time400 = 0.093852 seconds (6.45958 MB, 1476 rounds)
Time500 = 0.0932774 seconds (6.45958 MB, 1476 rounds)
Time600 = 0.380331 seconds (2.75299 MB, 11226 rounds)
Data sent = 20.5006 MB in ~26243 rounds (party 0 only; use '-v' for more details)
Global data sent = 61.3562 MB (all parties)
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_split(3)
Done
Measure performance for 800 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 0 comorbidity -pn 15422 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 1 comorbidity -pn 15422 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 2 comorbidity -pn 15422 -h localhost
Using statistical security parameter 40
Trying to run 64-bit computation
Executing comorbidity with 800 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 4.611e-06
Stopped timer 10 at 0.00242344 (0.0832 MB, 11 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.394e-06
Stopped timer 100 at 1.5453e-05 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.041e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 1.001e-06
Stopped timer 300 at 0.171216 (11.1711 MB, 2323 rounds)
Stopped timer 200 at 0.601776 (12.7936 MB, 15135 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 2.55e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.626e-06
Stopped timer 500 at 0.118279 (7.40477 MB, 1478 rounds)
Stopped timer 400 at 0.119186 (7.40477 MB, 1478 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 2.712e-06
Stopped timer 600 at 0.416167 (3.15776 MB, 12830 rounds)
The following benchmarks are including preprocessing (offline phase).
Time = 1.14101 seconds 
Time10 = 0.00242344 seconds (0.0832 MB, 11 rounds)
Time100 = 1.5453e-05 seconds (0 MB, 0 rounds)
Time200 = 0.601776 seconds (12.7936 MB, 15135 rounds)
Time300 = 0.171216 seconds (11.1711 MB, 2323 rounds)
Time400 = 0.119186 seconds (7.40477 MB, 1478 rounds)
Time500 = 0.118279 seconds (7.40477 MB, 1478 rounds)
Time600 = 0.416167 seconds (3.15776 MB, 12830 rounds)
Data sent = 23.4393 MB in ~29454 rounds (party 0 only; use '-v' for more details)
Global data sent = 70.1516 MB (all parties)
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_split(3)
Done
Measure performance for 900 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 0 comorbidity -pn 10026 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 1 comorbidity -pn 10026 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 2 comorbidity -pn 10026 -h localhost
Using statistical security parameter 40
Trying to run 64-bit computation
Executing comorbidity with 900 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 3.716e-06
Stopped timer 10 at 0.00260156 (0.0936 MB, 12 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.379e-06
Stopped timer 100 at 1.5655e-05 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 9.64e-07
Stopped timer 300 at 0.188304 (12.5667 MB, 2325 rounds)
Stopped timer 200 at 0.660307 (14.4524 MB, 16741 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 2.957e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.337e-06
Stopped timer 500 at 0.119678 (8.18918 MB, 1476 rounds)
Stopped timer 400 at 0.120403 (8.18918 MB, 1476 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.98e-06
Stopped timer 600 at 0.482356 (3.56253 MB, 14434 rounds)
The following benchmarks are including preprocessing (offline phase).
Time = 1.26728 seconds 
Time10 = 0.00260156 seconds (0.0936 MB, 12 rounds)
Time100 = 1.5655e-05 seconds (0 MB, 0 rounds)
Time200 = 0.660307 seconds (14.4524 MB, 16741 rounds)
Time300 = 0.188304 seconds (12.5667 MB, 2325 rounds)
Time400 = 0.120403 seconds (8.18918 MB, 1476 rounds)
Time500 = 0.119678 seconds (8.18918 MB, 1476 rounds)
Time600 = 0.482356 seconds (3.56253 MB, 14434 rounds)
Data sent = 26.2977 MB in ~32663 rounds (party 0 only; use '-v' for more details)
Global data sent = 78.7058 MB (all parties)
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_split(3)
Done
Measure performance for 1000 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 0 comorbidity -pn 16719 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 1 comorbidity -pn 16719 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 2 comorbidity -pn 16719 -h localhost
Using statistical security parameter 40
Trying to run 64-bit computation
Executing comorbidity with 1000 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 4.31e-06
Stopped timer 10 at 0.00289324 (0.104 MB, 13 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.307e-06
Stopped timer 100 at 1.8875e-05 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.032e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 9.67e-07
Stopped timer 300 at 0.194154 (13.9622 MB, 2327 rounds)
Stopped timer 200 at 0.709298 (16.0307 MB, 18345 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.77e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.069e-06
Stopped timer 500 at 0.123642 (9.13437 MB, 1478 rounds)
Stopped timer 400 at 0.124421 (9.13437 MB, 1478 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 2.095e-06
Stopped timer 600 at 0.525312 (3.9673 MB, 16038 rounds)
The following benchmarks are including preprocessing (offline phase).
Time = 1.36364 seconds 
Time10 = 0.00289324 seconds (0.104 MB, 13 rounds)
Time100 = 1.8875e-05 seconds (0 MB, 0 rounds)
Time200 = 0.709298 seconds (16.0307 MB, 18345 rounds)
Time300 = 0.194154 seconds (13.9622 MB, 2327 rounds)
Time400 = 0.124421 seconds (9.13437 MB, 1478 rounds)
Time500 = 0.123642 seconds (9.13437 MB, 1478 rounds)
Time600 = 0.525312 seconds (3.9673 MB, 16038 rounds)
Data sent = 29.2364 MB in ~35874 rounds (party 0 only; use '-v' for more details)
Global data sent = 87.5012 MB (all parties)
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_split(3)
Done
Measure performance for 1100 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 0 comorbidity -pn 18492 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 1 comorbidity -pn 18492 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 2 comorbidity -pn 18492 -h localhost
Using statistical security parameter 40
Trying to run 64-bit computation
Executing comorbidity with 1100 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 5.642e-06
Stopped timer 10 at 0.0031799 (0.1144 MB, 15 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 2.132e-06
Stopped timer 100 at 2.6063e-05 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.951e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 1.688e-06
Stopped timer 300 at 0.20866 (15.3578 MB, 2329 rounds)
Stopped timer 200 at 0.774192 (17.6091 MB, 19949 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 2.284e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.422e-06
Stopped timer 500 at 0.130093 (10.0796 MB, 1480 rounds)
Stopped timer 400 at 0.130913 (10.0796 MB, 1480 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 2.119e-06
Stopped timer 600 at 0.566177 (4.37206 MB, 17642 rounds)
The following benchmarks are including preprocessing (offline phase).
Time = 1.47628 seconds 
Time10 = 0.0031799 seconds (0.1144 MB, 15 rounds)
Time100 = 2.6063e-05 seconds (0 MB, 0 rounds)
Time200 = 0.774192 seconds (17.6091 MB, 19949 rounds)
Time300 = 0.20866 seconds (15.3578 MB, 2329 rounds)
Time400 = 0.130913 seconds (10.0796 MB, 1480 rounds)
Time500 = 0.130093 seconds (10.0796 MB, 1480 rounds)
Time600 = 0.566177 seconds (4.37206 MB, 17642 rounds)
Data sent = 32.1751 MB in ~39086 rounds (party 0 only; use '-v' for more details)
Global data sent = 96.2965 MB (all parties)
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_split(3)
Done
Measure performance for 1200 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 0 comorbidity -pn 13832 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 1 comorbidity -pn 13832 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 2 comorbidity -pn 13832 -h localhost
Using statistical security parameter 40
Trying to run 64-bit computation
Executing comorbidity with 1200 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 6.931e-06
Stopped timer 10 at 0.0034034 (0.1248 MB, 16 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.364e-06
Stopped timer 100 at 2.1226e-05 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.04e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 9.84e-07
Stopped timer 300 at 0.233689 (16.7534 MB, 2331 rounds)
Stopped timer 200 at 0.86525 (19.1875 MB, 21553 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.8e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.127e-06
Stopped timer 500 at 0.145504 (11.0247 MB, 1482 rounds)
Stopped timer 400 at 0.146694 (11.0247 MB, 1482 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 3.051e-06
Stopped timer 600 at 0.628849 (4.77683 MB, 19246 rounds)
The following benchmarks are including preprocessing (offline phase).
Time = 1.64617 seconds 
Time10 = 0.0034034 seconds (0.1248 MB, 16 rounds)
Time100 = 2.1226e-05 seconds (0 MB, 0 rounds)
Time200 = 0.86525 seconds (19.1875 MB, 21553 rounds)
Time300 = 0.233689 seconds (16.7534 MB, 2331 rounds)
Time400 = 0.146694 seconds (11.0247 MB, 1482 rounds)
Time500 = 0.145504 seconds (11.0247 MB, 1482 rounds)
Time600 = 0.628849 seconds (4.77683 MB, 19246 rounds)
Data sent = 35.1138 MB in ~42297 rounds (party 0 only; use '-v' for more details)
Global data sent = 105.092 MB (all parties)
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_split(3)
Done
Measure performance for 1300 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 0 comorbidity -pn 16447 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 1 comorbidity -pn 16447 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 2 comorbidity -pn 16447 -h localhost
Using statistical security parameter 40
Trying to run 64-bit computation
Executing comorbidity with 1300 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 5.493e-06
Stopped timer 10 at 0.00372441 (0.1352 MB, 17 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.25e-06
Stopped timer 100 at 2.1713e-05 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.7715e-05
Starting timer 300 at 0 (0 MB, 0 rounds) after 9.13e-07
Stopped timer 300 at 0.239402 (18.149 MB, 2333 rounds)
Stopped timer 200 at 0.905523 (20.8462 MB, 23159 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 2.534e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.828e-06
Stopped timer 500 at 0.149476 (11.8895 MB, 1482 rounds)
Stopped timer 400 at 0.150781 (11.8895 MB, 1482 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 2.87e-06
Stopped timer 600 at 0.676707 (5.1816 MB, 20850 rounds)
The following benchmarks are including preprocessing (offline phase).
Time = 1.73865 seconds 
Time10 = 0.00372441 seconds (0.1352 MB, 17 rounds)
Time100 = 2.1713e-05 seconds (0 MB, 0 rounds)
Time200 = 0.905523 seconds (20.8462 MB, 23159 rounds)
Time300 = 0.239402 seconds (18.149 MB, 2333 rounds)
Time400 = 0.150781 seconds (11.8895 MB, 1482 rounds)
Time500 = 0.149476 seconds (11.8895 MB, 1482 rounds)
Time600 = 0.676707 seconds (5.1816 MB, 20850 rounds)
Data sent = 38.0525 MB in ~45508 rounds (party 0 only; use '-v' for more details)
Global data sent = 113.887 MB (all parties)
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_split(3)
Done
Measure performance for 1400 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 0 comorbidity -pn 19103 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 1 comorbidity -pn 19103 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 2 comorbidity -pn 19103 -h localhost
Using statistical security parameter 40
Trying to run 64-bit computation
Executing comorbidity with 1400 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 5.279e-06
Stopped timer 10 at 0.00385682 (0.1456 MB, 19 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.194e-06
Stopped timer 100 at 2.2516e-05 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 9.13e-07
Starting timer 300 at 0 (0 MB, 0 rounds) after 8.68e-07
Stopped timer 300 at 0.254685 (19.5446 MB, 2335 rounds)
Stopped timer 200 at 0.946048 (22.4246 MB, 24763 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.693e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.09e-06
Stopped timer 500 at 0.152344 (12.8347 MB, 1484 rounds)
Stopped timer 400 at 0.153446 (12.8347 MB, 1484 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 2.012e-06
Stopped timer 600 at 0.746563 (5.50598 MB, 22452 rounds)
The following benchmarks are including preprocessing (offline phase).
Time = 1.85217 seconds 
Time10 = 0.00385682 seconds (0.1456 MB, 19 rounds)
Time100 = 2.2516e-05 seconds (0 MB, 0 rounds)
Time200 = 0.946048 seconds (22.4246 MB, 24763 rounds)
Time300 = 0.254685 seconds (19.5446 MB, 2335 rounds)
Time400 = 0.153446 seconds (12.8347 MB, 1484 rounds)
Time500 = 0.152344 seconds (12.8347 MB, 1484 rounds)
Time600 = 0.746563 seconds (5.50598 MB, 22452 rounds)
Data sent = 40.9109 MB in ~48718 rounds (party 0 only; use '-v' for more details)
Global data sent = 122.441 MB (all parties)
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_split(3)
Done
Measure performance for 1500 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 0 comorbidity -pn 14544 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 1 comorbidity -pn 14544 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 2 comorbidity -pn 14544 -h localhost
Using statistical security parameter 40
Trying to run 64-bit computation
Executing comorbidity with 1500 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 7.438e-06
Stopped timer 10 at 0.00424282 (0.156 MB, 20 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 2.181e-06
Stopped timer 100 at 3.3155e-05 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.923e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 1.763e-06
Stopped timer 300 at 0.260106 (20.9402 MB, 2337 rounds)
Stopped timer 200 at 1.01736 (24.0029 MB, 26367 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 2.108e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.051e-06
Stopped timer 500 at 0.16934 (13.7799 MB, 1486 rounds)
Stopped timer 400 at 0.170499 (13.7799 MB, 1486 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 2.196e-06
Stopped timer 600 at 0.778949 (5.91075 MB, 24056 rounds)
The following benchmarks are including preprocessing (offline phase).
Time = 1.97356 seconds 
Time10 = 0.00424282 seconds (0.156 MB, 20 rounds)
Time100 = 3.3155e-05 seconds (0 MB, 0 rounds)
Time200 = 1.01736 seconds (24.0029 MB, 26367 rounds)
Time300 = 0.260106 seconds (20.9402 MB, 2337 rounds)
Time400 = 0.170499 seconds (13.7799 MB, 1486 rounds)
Time500 = 0.16934 seconds (13.7799 MB, 1486 rounds)
Time600 = 0.778949 seconds (5.91075 MB, 24056 rounds)
Data sent = 43.8496 MB in ~51929 rounds (party 0 only; use '-v' for more details)
Global data sent = 131.237 MB (all parties)
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_split(3)
Done
Measure performance for 1600 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 0 comorbidity -pn 10162 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 1 comorbidity -pn 10162 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 2 comorbidity -pn 10162 -h localhost
Using statistical security parameter 40
Trying to run 64-bit computation
Executing comorbidity with 1600 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 4.882e-06
Stopped timer 10 at 0.00454937 (0.1664 MB, 21 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.4e-06
Stopped timer 100 at 2.8692e-05 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.03e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 9.41e-07
Stopped timer 300 at 0.287525 (22.3357 MB, 2339 rounds)
Stopped timer 200 at 1.12052 (25.5813 MB, 27971 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.952e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.15e-06
Stopped timer 500 at 0.170886 (14.7251 MB, 1488 rounds)
Stopped timer 400 at 0.172117 (14.7251 MB, 1488 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.928e-06
Stopped timer 600 at 0.876315 (6.31552 MB, 25660 rounds)
The following benchmarks are including preprocessing (offline phase).
Time = 2.17584 seconds 
Time10 = 0.00454937 seconds (0.1664 MB, 21 rounds)
Time100 = 2.8692e-05 seconds (0 MB, 0 rounds)
Time200 = 1.12052 seconds (25.5813 MB, 27971 rounds)
Time300 = 0.287525 seconds (22.3357 MB, 2339 rounds)
Time400 = 0.172117 seconds (14.7251 MB, 1488 rounds)
Time500 = 0.170886 seconds (14.7251 MB, 1488 rounds)
Time600 = 0.876315 seconds (6.31552 MB, 25660 rounds)
Data sent = 46.7883 MB in ~55140 rounds (party 0 only; use '-v' for more details)
Global data sent = 140.032 MB (all parties)
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_split(3)
Done
Measure performance for 1700 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 0 comorbidity -pn 15017 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 1 comorbidity -pn 15017 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 2 comorbidity -pn 15017 -h localhost
Using statistical security parameter 40
Trying to run 64-bit computation
Executing comorbidity with 1700 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 4.584e-06
Stopped timer 10 at 0.0045799 (0.1768 MB, 23 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.352e-06
Stopped timer 100 at 3.3576e-05 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.034e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 9.96e-07
Stopped timer 300 at 0.300974 (23.7313 MB, 2341 rounds)
Stopped timer 200 at 1.18666 (27.2401 MB, 29577 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.786e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.953e-06
Stopped timer 500 at 0.195052 (15.5095 MB, 1486 rounds)
Stopped timer 400 at 0.196591 (15.5095 MB, 1486 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 2.766e-06
Stopped timer 600 at 0.904018 (6.80067 MB, 27266 rounds)
The following benchmarks are including preprocessing (offline phase).
Time = 2.29402 seconds 
Time10 = 0.0045799 seconds (0.1768 MB, 23 rounds)
Time100 = 3.3576e-05 seconds (0 MB, 0 rounds)
Time200 = 1.18666 seconds (27.2401 MB, 29577 rounds)
Time300 = 0.300974 seconds (23.7313 MB, 2341 rounds)
Time400 = 0.196591 seconds (15.5095 MB, 1486 rounds)
Time500 = 0.195052 seconds (15.5095 MB, 1486 rounds)
Time600 = 0.904018 seconds (6.80067 MB, 27266 rounds)
Data sent = 49.727 MB in ~58352 rounds (party 0 only; use '-v' for more details)
Global data sent = 148.828 MB (all parties)
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_split(3)
Done
Measure performance for 1800 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 0 comorbidity -pn 18249 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 1 comorbidity -pn 18249 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 2 comorbidity -pn 18249 -h localhost
Using statistical security parameter 40
Trying to run 64-bit computation
Executing comorbidity with 1800 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 4.443e-06
Stopped timer 10 at 0.00583958 (0.1872 MB, 24 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.243e-06
Stopped timer 100 at 5.1951e-05 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.261e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 9.53e-07
Stopped timer 300 at 0.314087 (25.1269 MB, 2343 rounds)
Stopped timer 200 at 1.23703 (28.8184 MB, 31181 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 2.031e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.121e-06
Stopped timer 500 at 0.200379 (16.4547 MB, 1488 rounds)
Stopped timer 400 at 0.201733 (16.4547 MB, 1488 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.998e-06
Stopped timer 600 at 0.945564 (7.12506 MB, 28868 rounds)
The following benchmarks are including preprocessing (offline phase).
Time = 2.3927 seconds 
Time10 = 0.00583958 seconds (0.1872 MB, 24 rounds)
Time100 = 5.1951e-05 seconds (0 MB, 0 rounds)
Time200 = 1.23703 seconds (28.8184 MB, 31181 rounds)
Time300 = 0.314087 seconds (25.1269 MB, 2343 rounds)
Time400 = 0.201733 seconds (16.4547 MB, 1488 rounds)
Time500 = 0.200379 seconds (16.4547 MB, 1488 rounds)
Time600 = 0.945564 seconds (7.12506 MB, 28868 rounds)
Data sent = 52.5854 MB in ~61561 rounds (party 0 only; use '-v' for more details)
Global data sent = 157.382 MB (all parties)
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_split(3)
Done
Measure performance for 1900 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 0 comorbidity -pn 19883 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 1 comorbidity -pn 19883 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 2 comorbidity -pn 19883 -h localhost
Using statistical security parameter 40
Trying to run 64-bit computation
Executing comorbidity with 1900 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 3.31e-06
Stopped timer 10 at 0.00581863 (0.1976 MB, 25 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 2.219e-06
Stopped timer 100 at 5.6235e-05 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.903e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 1.614e-06
Stopped timer 300 at 0.340585 (26.5225 MB, 2345 rounds)
Stopped timer 200 at 1.32103 (30.3968 MB, 32785 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.868e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.724e-06
Stopped timer 500 at 0.203943 (17.3999 MB, 1490 rounds)
Stopped timer 400 at 0.205395 (17.3999 MB, 1490 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 2.073e-06
Stopped timer 600 at 0.991158 (7.52982 MB, 30472 rounds)
The following benchmarks are including preprocessing (offline phase).
Time = 2.52599 seconds 
Time10 = 0.00581863 seconds (0.1976 MB, 25 rounds)
Time100 = 5.6235e-05 seconds (0 MB, 0 rounds)
Time200 = 1.32103 seconds (30.3968 MB, 32785 rounds)
Time300 = 0.340585 seconds (26.5225 MB, 2345 rounds)
Time400 = 0.205395 seconds (17.3999 MB, 1490 rounds)
Time500 = 0.203943 seconds (17.3999 MB, 1490 rounds)
Time600 = 0.991158 seconds (7.52982 MB, 30472 rounds)
Data sent = 55.5241 MB in ~64772 rounds (party 0 only; use '-v' for more details)
Global data sent = 166.177 MB (all parties)
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_split(3)
Done
Measure performance for 2000 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 0 comorbidity -pn 14310 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 1 comorbidity -pn 14310 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 2 comorbidity -pn 14310 -h localhost
Using statistical security parameter 40
Trying to run 64-bit computation
Executing comorbidity with 2000 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 5.312e-06
Stopped timer 10 at 0.00574359 (0.208 MB, 26 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.475e-06
Stopped timer 100 at 3.9483e-05 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.031e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 9.99e-07
Stopped timer 300 at 0.337518 (27.9181 MB, 2347 rounds)
Stopped timer 200 at 1.39091 (31.9752 MB, 34389 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.718e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.169e-06
Stopped timer 500 at 0.208674 (18.3451 MB, 1492 rounds)
Stopped timer 400 at 0.210143 (18.3451 MB, 1492 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.945e-06
Stopped timer 600 at 1.08086 (7.93459 MB, 32076 rounds)
The following benchmarks are including preprocessing (offline phase).
Time = 2.69034 seconds 
Time10 = 0.00574359 seconds (0.208 MB, 26 rounds)
Time100 = 3.9483e-05 seconds (0 MB, 0 rounds)
Time200 = 1.39091 seconds (31.9752 MB, 34389 rounds)
Time300 = 0.337518 seconds (27.9181 MB, 2347 rounds)
Time400 = 0.210143 seconds (18.3451 MB, 1492 rounds)
Time500 = 0.208674 seconds (18.3451 MB, 1492 rounds)
Time600 = 1.08086 seconds (7.93459 MB, 32076 rounds)
Data sent = 58.4628 MB in ~67983 rounds (party 0 only; use '-v' for more details)
Global data sent = 174.972 MB (all parties)
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_split(3)
Done
Measure performance for 4000 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 0 comorbidity -pn 14278 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 1 comorbidity -pn 14278 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 2 comorbidity -pn 14278 -h localhost
Using statistical security parameter 40
Trying to run 64-bit computation
Executing comorbidity with 4000 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 4.76e-06
Stopped timer 10 at 0.0112619 (0.416 MB, 52 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.447e-06
Stopped timer 100 at 0.000101608 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.131e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 1.328e-06
Stopped timer 300 at 0.581316 (55.8298 MB, 2387 rounds)
Stopped timer 200 at 2.64293 (63.9444 MB, 66479 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.877e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.079e-06
Stopped timer 500 at 0.37604 (36.686 MB, 1518 rounds)
Stopped timer 400 at 0.379495 (36.686 MB, 1518 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 2.813e-06
Stopped timer 600 at 2.1231 (15.8692 MB, 64152 rounds)
The following benchmarks are including preprocessing (offline phase).
Time = 5.16172 seconds 
Time10 = 0.0112619 seconds (0.416 MB, 52 rounds)
Time100 = 0.000101608 seconds (0 MB, 0 rounds)
Time200 = 2.64293 seconds (63.9444 MB, 66479 rounds)
Time300 = 0.581316 seconds (55.8298 MB, 2387 rounds)
Time400 = 0.379495 seconds (36.686 MB, 1518 rounds)
Time500 = 0.37604 seconds (36.686 MB, 1518 rounds)
Time600 = 2.1231 seconds (15.8692 MB, 64152 rounds)
Data sent = 116.916 MB in ~132201 rounds (party 0 only; use '-v' for more details)
Global data sent = 349.915 MB (all parties)
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_split(3)
Done
Measure performance for 6000 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 0 comorbidity -pn 10309 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 1 comorbidity -pn 10309 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 2 comorbidity -pn 10309 -h localhost
Using statistical security parameter 40
Trying to run 64-bit computation
Executing comorbidity with 6000 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 5.117e-06
Stopped timer 10 at 0.0158053 (0.624 MB, 78 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.398e-06
Stopped timer 100 at 0.000153702 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.216e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 1.018e-06
Stopped timer 300 at 0.885016 (83.7414 MB, 2427 rounds)
Stopped timer 200 at 3.95484 (95.9137 MB, 98569 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.804e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.097e-06
Stopped timer 500 at 0.519183 (54.9467 MB, 1542 rounds)
Stopped timer 400 at 0.52341 (54.9467 MB, 1542 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.904e-06
Stopped timer 600 at 3.13906 (23.8038 MB, 96228 rounds)
The following benchmarks are including preprocessing (offline phase).
Time = 7.64029 seconds 
Time10 = 0.0158053 seconds (0.624 MB, 78 rounds)
Time100 = 0.000153702 seconds (0 MB, 0 rounds)
Time200 = 3.95484 seconds (95.9137 MB, 98569 rounds)
Time300 = 0.885016 seconds (83.7414 MB, 2427 rounds)
Time400 = 0.52341 seconds (54.9467 MB, 1542 rounds)
Time500 = 0.519183 seconds (54.9467 MB, 1542 rounds)
Time600 = 3.13906 seconds (23.8038 MB, 96228 rounds)
Data sent = 175.288 MB in ~196417 rounds (party 0 only; use '-v' for more details)
Global data sent = 524.616 MB (all parties)
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_split(3)
Done
Measure performance for 8000 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 0 comorbidity -pn 11023 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 1 comorbidity -pn 11023 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 2 comorbidity -pn 11023 -h localhost
Using statistical security parameter 40
Trying to run 64-bit computation
Executing comorbidity with 8000 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 4.375e-06
Stopped timer 10 at 0.0215009 (0.832 MB, 104 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.66e-06
Stopped timer 100 at 0.000218176 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.68e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 1.556e-06
Stopped timer 300 at 1.25279 (111.653 MB, 2467 rounds)
Stopped timer 200 at 5.39944 (127.883 MB, 130659 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.785e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.049e-06
Stopped timer 500 at 0.702406 (73.2876 MB, 1568 rounds)
Stopped timer 400 at 0.708356 (73.2876 MB, 1568 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 2.219e-06
Stopped timer 600 at 4.18332 (31.7384 MB, 128304 rounds)
The following benchmarks are including preprocessing (offline phase).
Time = 10.3255 seconds 
Time10 = 0.0215009 seconds (0.832 MB, 104 rounds)
Time100 = 0.000218176 seconds (0 MB, 0 rounds)
Time200 = 5.39944 seconds (127.883 MB, 130659 rounds)
Time300 = 1.25279 seconds (111.653 MB, 2467 rounds)
Time400 = 0.708356 seconds (73.2876 MB, 1568 rounds)
Time500 = 0.702406 seconds (73.2876 MB, 1568 rounds)
Time600 = 4.18332 seconds (31.7384 MB, 128304 rounds)
Data sent = 233.741 MB in ~260635 rounds (party 0 only; use '-v' for more details)
Global data sent = 699.559 MB (all parties)
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_split(3)
Done
Measure performance for 10000 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 0 comorbidity -pn 11717 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 1 comorbidity -pn 11717 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 2 comorbidity -pn 11717 -h localhost
Using statistical security parameter 40
Trying to run 64-bit computation
Executing comorbidity with 10000 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 5.266e-06
Stopped timer 10 at 0.0260706 (1.04 MB, 130 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.266e-06
Stopped timer 100 at 0.000255038 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.074e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 9.66e-07
Stopped timer 300 at 1.48061 (139.565 MB, 2507 rounds)
Stopped timer 200 at 6.67002 (159.852 MB, 162749 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.81e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.079e-06
Stopped timer 500 at 0.908446 (91.5483 MB, 1592 rounds)
Stopped timer 400 at 0.915686 (91.5483 MB, 1592 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 2.063e-06
Stopped timer 600 at 5.339 (39.673 MB, 160380 rounds)
The following benchmarks are including preprocessing (offline phase).
Time = 12.9676 seconds 
Time10 = 0.0260706 seconds (1.04 MB, 130 rounds)
Time100 = 0.000255038 seconds (0 MB, 0 rounds)
Time200 = 6.67002 seconds (159.852 MB, 162749 rounds)
Time300 = 1.48061 seconds (139.565 MB, 2507 rounds)
Time400 = 0.915686 seconds (91.5483 MB, 1592 rounds)
Time500 = 0.908446 seconds (91.5483 MB, 1592 rounds)
Time600 = 5.339 seconds (39.673 MB, 160380 rounds)
Data sent = 292.114 MB in ~324851 rounds (party 0 only; use '-v' for more details)
Global data sent = 874.261 MB (all parties)
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_split(3)
Done
Measure performance for 20000 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 0 comorbidity -pn 10049 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 1 comorbidity -pn 10049 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 2 comorbidity -pn 10049 -h localhost
Using statistical security parameter 40
Trying to run 64-bit computation
Executing comorbidity with 20000 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 5.494e-06
Stopped timer 10 at 0.0505466 (2.08 MB, 260 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.384e-06
Stopped timer 100 at 0.000545675 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.179e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 9.8e-07
Stopped timer 300 at 2.86437 (279.123 MB, 2707 rounds)
Stopped timer 200 at 13.2512 (319.699 MB, 323199 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 2.4e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.593e-06
Stopped timer 500 at 1.72285 (183.092 MB, 1718 rounds)
Stopped timer 400 at 1.73686 (183.092 MB, 1718 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.87e-06
Stopped timer 600 at 10.5552 (79.3459 MB, 320760 rounds)
The following benchmarks are including preprocessing (offline phase).
Time = 25.6194 seconds 
Time10 = 0.0505466 seconds (2.08 MB, 260 rounds)
Time100 = 0.000545675 seconds (0 MB, 0 rounds)
Time200 = 13.2512 seconds (319.699 MB, 323199 rounds)
Time300 = 2.86437 seconds (279.123 MB, 2707 rounds)
Time400 = 1.73686 seconds (183.092 MB, 1718 rounds)
Time500 = 1.72285 seconds (183.092 MB, 1718 rounds)
Time600 = 10.5552 seconds (79.3459 MB, 320760 rounds)
Data sent = 584.217 MB in ~645937 rounds (party 0 only; use '-v' for more details)
Global data sent = 1748.49 MB (all parties)
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_split(3)
Done
Measure performance for 40000 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 0 comorbidity -pn 14543 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 1 comorbidity -pn 14543 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 2 comorbidity -pn 14543 -h localhost
Using statistical security parameter 40
Trying to run 64-bit computation
Executing comorbidity with 40000 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 5.446e-06
Stopped timer 10 at 0.105215 (4.16 MB, 520 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.566e-06
Stopped timer 100 at 0.00110868 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.561e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 1.133e-06
Stopped timer 300 at 5.80321 (558.16 MB, 3105 rounds)
Stopped timer 200 at 26.6024 (639.391 MB, 644099 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.961e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.144e-06
Stopped timer 500 at 3.54638 (366.1 MB, 1968 rounds)
Stopped timer 400 at 3.5741 (366.1 MB, 1968 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.882e-06
Stopped timer 600 at 21.2074 (158.692 MB, 641520 rounds)
The following benchmarks are including preprocessing (offline phase).
Time = 51.5342 seconds 
Time10 = 0.105215 seconds (4.16 MB, 520 rounds)
Time100 = 0.00110868 seconds (0 MB, 0 rounds)
Time200 = 26.6024 seconds (639.391 MB, 644099 rounds)
Time300 = 5.80321 seconds (558.16 MB, 3105 rounds)
Time400 = 3.5741 seconds (366.1 MB, 1968 rounds)
Time500 = 3.54638 seconds (366.1 MB, 1968 rounds)
Time600 = 21.2074 seconds (158.692 MB, 641520 rounds)
Data sent = 1168.34 MB in ~1288107 rounds (party 0 only; use '-v' for more details)
Global data sent = 3496.71 MB (all parties)
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_split(3)
Done
Measure performance for 60000 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 0 comorbidity -pn 18768 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 1 comorbidity -pn 18768 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 2 comorbidity -pn 18768 -h localhost
Using statistical security parameter 40
Trying to run 64-bit computation
Executing comorbidity with 60000 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 6.714e-06
Stopped timer 10 at 0.159818 (6.24 MB, 780 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.605e-06
Stopped timer 100 at 0.00166124 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.359e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 1.148e-06
Stopped timer 300 at 8.51956 (837.196 MB, 3503 rounds)
Stopped timer 200 at 39.5082 (959.084 MB, 964999 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.886e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.129e-06
Stopped timer 500 at 5.14683 (549.108 MB, 2218 rounds)
Stopped timer 400 at 5.19056 (549.108 MB, 2218 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.947e-06
Stopped timer 600 at 31.7984 (238.118 MB, 962282 rounds)
The following benchmarks are including preprocessing (offline phase).
Time = 76.7216 seconds 
Time10 = 0.159818 seconds (6.24 MB, 780 rounds)
Time100 = 0.00166124 seconds (0 MB, 0 rounds)
Time200 = 39.5082 seconds (959.084 MB, 964999 rounds)
Time300 = 8.51956 seconds (837.196 MB, 3503 rounds)
Time400 = 5.19056 seconds (549.108 MB, 2218 rounds)
Time500 = 5.14683 seconds (549.108 MB, 2218 rounds)
Time600 = 31.7984 seconds (238.118 MB, 962282 rounds)
Data sent = 1752.55 MB in ~1930279 rounds (party 0 only; use '-v' for more details)
Global data sent = 5245.17 MB (all parties)
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_split(3)
Done
Measure performance for 80000 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 0 comorbidity -pn 16955 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 1 comorbidity -pn 16955 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 2 comorbidity -pn 16955 -h localhost
Using statistical security parameter 40
Trying to run 64-bit computation
Executing comorbidity with 80000 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 6.422e-06
Stopped timer 10 at 0.21496 (8.32 MB, 1040 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.52e-06
Stopped timer 100 at 0.00223835 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.507e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 1.173e-06
Stopped timer 300 at 11.5464 (1116.23 MB, 3901 rounds)
Stopped timer 200 at 53.0241 (1278.78 MB, 1285899 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.811e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.01e-06
Stopped timer 500 at 7.04376 (732.116 MB, 2468 rounds)
Stopped timer 400 at 7.10082 (732.116 MB, 2468 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.993e-06
Stopped timer 600 at 42.1762 (317.464 MB, 1283042 rounds)
The following benchmarks are including preprocessing (offline phase).
Time = 102.601 seconds 
Time10 = 0.21496 seconds (8.32 MB, 1040 rounds)
Time100 = 0.00223835 seconds (0 MB, 0 rounds)
Time200 = 53.0241 seconds (1278.78 MB, 1285899 rounds)
Time300 = 11.5464 seconds (1116.23 MB, 3901 rounds)
Time400 = 7.10082 seconds (732.116 MB, 2468 rounds)
Time500 = 7.04376 seconds (732.116 MB, 2468 rounds)
Time600 = 42.1762 seconds (317.464 MB, 1283042 rounds)
Data sent = 2336.68 MB in ~2572449 rounds (party 0 only; use '-v' for more details)
Global data sent = 6993.39 MB (all parties)
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_split(3)
Done
Measure performance for 100000 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 0 comorbidity -pn 19190 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 1 comorbidity -pn 19190 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 2 comorbidity -pn 19190 -h localhost
Using statistical security parameter 40
Trying to run 64-bit computation
Executing comorbidity with 100000 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 5.94e-06
Stopped timer 10 at 0.312657 (10.4 MB, 1300 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.614e-06
Stopped timer 100 at 0.00310805 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.172e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 1.539e-06
Stopped timer 300 at 14.6215 (1395.27 MB, 4299 rounds)
Stopped timer 200 at 66.5084 (1598.47 MB, 1606799 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.926e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.082e-06
Stopped timer 500 at 8.90359 (915.205 MB, 2720 rounds)
Stopped timer 400 at 8.97396 (915.205 MB, 2720 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.876e-06
Stopped timer 600 at 53.3363 (396.81 MB, 1603802 rounds)
The following benchmarks are including preprocessing (offline phase).
Time = 129.238 seconds 
Time10 = 0.312657 seconds (10.4 MB, 1300 rounds)
Time100 = 0.00310805 seconds (0 MB, 0 rounds)
Time200 = 66.5084 seconds (1598.47 MB, 1606799 rounds)
Time300 = 14.6215 seconds (1395.27 MB, 4299 rounds)
Time400 = 8.97396 seconds (915.205 MB, 2720 rounds)
Time500 = 8.90359 seconds (915.205 MB, 2720 rounds)
Time600 = 53.3363 seconds (396.81 MB, 1603802 rounds)
Data sent = 2920.88 MB in ~3214621 rounds (party 0 only; use '-v' for more details)
Global data sent = 8741.85 MB (all parties)
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_split(3)
Done
Measure performance for 200000 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 0 comorbidity -pn 14998 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 1 comorbidity -pn 14998 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 2 comorbidity -pn 14998 -h localhost
Using statistical security parameter 40
Trying to run 64-bit computation
Executing comorbidity with 200000 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 5.125e-06
Stopped timer 10 at 0.551828 (20.8 MB, 2600 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.61e-06
Stopped timer 100 at 0.00552989 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.329e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 1.034e-06
Stopped timer 300 at 29.4572 (2790.45 MB, 6289 rounds)
Stopped timer 200 at 133.239 (3196.85 MB, 3211297 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.88e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.081e-06
Stopped timer 500 at 17.8354 (1830.41 MB, 3974 rounds)
Stopped timer 400 at 17.9736 (1830.41 MB, 3974 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 2.443e-06
Stopped timer 600 at 106.261 (793.62 MB, 3207604 rounds)
The following benchmarks are including preprocessing (offline phase).
Time = 258.243 seconds 
Time10 = 0.551828 seconds (20.8 MB, 2600 rounds)
Time100 = 0.00552989 seconds (0 MB, 0 rounds)
Time200 = 133.239 seconds (3196.85 MB, 3211297 rounds)
Time300 = 29.4572 seconds (2790.45 MB, 6289 rounds)
Time400 = 17.9736 seconds (1830.41 MB, 3974 rounds)
Time500 = 17.8354 seconds (1830.41 MB, 3974 rounds)
Time600 = 106.261 seconds (793.62 MB, 3207604 rounds)
Data sent = 5841.68 MB in ~6425475 rounds (party 0 only; use '-v' for more details)
Global data sent = 17483.4 MB (all parties)
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_split(3)
Done
Measure performance for 400000 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 0 comorbidity -pn 10621 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 1 comorbidity -pn 10621 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 2 comorbidity -pn 10621 -h localhost
Using statistical security parameter 40
Trying to run 64-bit computation
Executing comorbidity with 400000 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 5.122e-06
Stopped timer 10 at 1.11406 (41.6 MB, 5200 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.485e-06
Stopped timer 100 at 0.0110704 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.504e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 1.416e-06
Stopped timer 300 at 62.7172 (5580.82 MB, 10269 rounds)
Stopped timer 200 at 269.882 (6393.62 MB, 6420293 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.82e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.059e-06
Stopped timer 500 at 37.7321 (3660.81 MB, 6482 rounds)
Stopped timer 400 at 38.007 (3660.81 MB, 6482 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 2.644e-06
Stopped timer 600 at 211.907 (1587.24 MB, 6415208 rounds)
The following benchmarks are including preprocessing (offline phase).
Time = 521.279 seconds 
Time10 = 1.11406 seconds (41.6 MB, 5200 rounds)
Time100 = 0.0110704 seconds (0 MB, 0 rounds)
Time200 = 269.882 seconds (6393.62 MB, 6420293 rounds)
Time300 = 62.7172 seconds (5580.82 MB, 10269 rounds)
Time400 = 38.007 seconds (3660.81 MB, 6482 rounds)
Time500 = 37.7321 seconds (3660.81 MB, 6482 rounds)
Time600 = 211.907 seconds (1587.24 MB, 6415208 rounds)
Data sent = 11683.3 MB in ~12847183 rounds (party 0 only; use '-v' for more details)
Global data sent = 34966.6 MB (all parties)
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_split(3)
Done
Measure performance for 600000 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 0 comorbidity -pn 16698 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 1 comorbidity -pn 16698 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 2 comorbidity -pn 16698 -h localhost
Using statistical security parameter 40
Trying to run 64-bit computation
Executing comorbidity with 600000 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 7.26e-06
Stopped timer 10 at 1.60537 (62.4 MB, 7800 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.481e-06
Stopped timer 100 at 0.0164459 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.602e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 1.053e-06
Stopped timer 300 at 104.439 (8371.26 MB, 14251 rounds)
Stopped timer 200 at 415.216 (9590.47 MB, 9629291 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.857e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.15e-06
Stopped timer 500 at 64.8736 (5491.21 MB, 8990 rounds)
Stopped timer 400 at 65.2864 (5491.21 MB, 8990 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 2.136e-06
Stopped timer 600 at 318.061 (2380.78 MB, 9622810 rounds)
The following benchmarks are including preprocessing (offline phase).
Time = 800.732 seconds 
Time10 = 1.60537 seconds (62.4 MB, 7800 rounds)
Time100 = 0.0164459 seconds (0 MB, 0 rounds)
Time200 = 415.216 seconds (9590.47 MB, 9629291 rounds)
Time300 = 104.439 seconds (8371.26 MB, 14251 rounds)
Time400 = 65.2864 seconds (5491.21 MB, 8990 rounds)
Time500 = 64.8736 seconds (5491.21 MB, 8990 rounds)
Time600 = 318.061 seconds (2380.78 MB, 9622810 rounds)
Data sent = 17524.9 MB in ~19268891 rounds (party 0 only; use '-v' for more details)
Global data sent = 52449.8 MB (all parties)
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_split(3)
Done
Measure performance for 800000 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 0 comorbidity -pn 13292 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 1 comorbidity -pn 13292 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 2 comorbidity -pn 13292 -h localhost
Using statistical security parameter 40
Trying to run 64-bit computation
Executing comorbidity with 800000 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 4.63e-06
Stopped timer 10 at 2.14987 (83.2 MB, 10400 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.419e-06
Stopped timer 100 at 0.0217138 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.239e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 1.092e-06
Stopped timer 300 at 135.515 (11161.6 MB, 18231 rounds)
Stopped timer 200 at 549.694 (12787.2 MB, 12838287 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.919e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.2e-06
Stopped timer 500 at 83.6304 (7321.61 MB, 11498 rounds)
Stopped timer 400 at 84.199 (7321.61 MB, 11498 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 2.002e-06
Stopped timer 600 at 423.722 (3174.4 MB, 12830414 rounds)
The following benchmarks are including preprocessing (offline phase).
Time = 1060.51 seconds 
Time10 = 2.14987 seconds (83.2 MB, 10400 rounds)
Time100 = 0.0217138 seconds (0 MB, 0 rounds)
Time200 = 549.694 seconds (12787.2 MB, 12838287 rounds)
Time300 = 135.515 seconds (11161.6 MB, 18231 rounds)
Time400 = 84.199 seconds (7321.61 MB, 11498 rounds)
Time500 = 83.6304 seconds (7321.61 MB, 11498 rounds)
Time600 = 423.722 seconds (3174.4 MB, 12830414 rounds)
Data sent = 23366.4 MB in ~25690599 rounds (party 0 only; use '-v' for more details)
Global data sent = 69932.9 MB (all parties)
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_split(3)
Done
Measure performance for 1000000 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 0 comorbidity -pn 15820 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 1 comorbidity -pn 15820 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-ring-party.x 2 comorbidity -pn 15820 -h localhost
Using statistical security parameter 40
Trying to run 64-bit computation
Executing comorbidity with 1000000 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 5.083e-06
Stopped timer 10 at 2.78841 (104 MB, 13000 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.554e-06
Stopped timer 100 at 0.0270636 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.356e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 9.62e-07
Stopped timer 300 at 168.593 (13952.1 MB, 22213 rounds)
Stopped timer 200 at 686.914 (15984.1 MB, 16047285 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.799e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.06e-06
Stopped timer 500 at 102.462 (9151.93 MB, 14004 rounds)
Stopped timer 400 at 103.148 (9151.93 MB, 14004 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 2.185e-06
Stopped timer 600 at 529.755 (3968.02 MB, 16038018 rounds)
The following benchmarks are including preprocessing (offline phase).
Time = 1323.48 seconds 
Time10 = 2.78841 seconds (104 MB, 13000 rounds)
Time100 = 0.0270636 seconds (0 MB, 0 rounds)
Time200 = 686.914 seconds (15984.1 MB, 16047285 rounds)
Time300 = 168.593 seconds (13952.1 MB, 22213 rounds)
Time400 = 103.148 seconds (9151.93 MB, 14004 rounds)
Time500 = 102.462 seconds (9151.93 MB, 14004 rounds)
Time600 = 529.755 seconds (3968.02 MB, 16038018 rounds)
Data sent = 29208 MB in ~32112307 rounds (party 0 only; use '-v' for more details)
Global data sent = 87416.1 MB (all parties)
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_split(3)
Done

### binary

Measure performance for 100 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 0 comorbidity -pn 18835 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 1 comorbidity -pn 18835 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 2 comorbidity -pn 18835 -h localhost
Using statistical security parameter 40
Executing comorbidity with 100 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 5.705e-06
Stopped timer 10 at 0.690896 (0 MB, 0 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.223e-06
Stopped timer 100 at 1.0089e-05 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 8.02e-07
Starting timer 300 at 0 (0 MB, 0 rounds) after 8.33e-07
Stopped timer 300 at 0.310528 (0 MB, 0 rounds)
Stopped timer 200 at 0.363043 (0 MB, 0 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.179e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 9.07e-07
Stopped timer 500 at 0.327692 (0 MB, 0 rounds)
Stopped timer 400 at 0.327861 (0 MB, 0 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.216e-06
Stopped timer 600 at 0.0867865 (0 MB, 0 rounds)
Passing around 0.11481 MB in 28929 rounds, taking 0.693709 seconds
Receiving directly 6.4e-05 MB in 4 rounds, taking 0.000419618 seconds
Sending directly 0.010464 MB in 6 rounds, taking 0.00048443 seconds
The following benchmarks are including preprocessing (offline phase).
Time = 1.4702 seconds 
Time10 = 0.690896 seconds (0 MB, 0 rounds)
Time100 = 1.0089e-05 seconds (0 MB, 0 rounds)
Time200 = 0.363043 seconds (0 MB, 0 rounds)
Time300 = 0.310528 seconds (0 MB, 0 rounds)
Time400 = 0.327861 seconds (0 MB, 0 rounds)
Time500 = 0.327692 seconds (0 MB, 0 rounds)
Time600 = 0.0867865 seconds (0 MB, 0 rounds)
Data sent = 0.125274 MB in ~28940 rounds (party 0 only; use '-v' for more details)
Global data sent = 0.355022 MB (all parties)
Done
Measure performance for 200 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 0 comorbidity -pn 15905 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 1 comorbidity -pn 15905 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 2 comorbidity -pn 15905 -h localhost
Using statistical security parameter 40
Executing comorbidity with 200 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 3.465e-06
Stopped timer 10 at 1.58727 (0 MB, 0 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.108e-06
Stopped timer 100 at 1.9846e-05 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 8.3e-07
Starting timer 300 at 0 (0 MB, 0 rounds) after 7.93e-07
Stopped timer 300 at 0.820553 (0 MB, 0 rounds)
Stopped timer 200 at 0.92631 (0 MB, 0 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.209e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 9.44e-07
Stopped timer 500 at 0.861831 (0 MB, 0 rounds)
Stopped timer 400 at 0.862104 (0 MB, 0 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.303e-06
Stopped timer 600 at 0.175654 (0 MB, 0 rounds)
Passing around 0.290634 MB in 72217 rounds, taking 1.74928 seconds
Receiving directly 8e-05 MB in 5 rounds, taking 0.00277134 seconds
Sending directly 0.02088 MB in 8 rounds, taking 0.000724005 seconds
The following benchmarks are including preprocessing (offline phase).
Time = 3.55315 seconds 
Time10 = 1.58727 seconds (0 MB, 0 rounds)
Time100 = 1.9846e-05 seconds (0 MB, 0 rounds)
Time200 = 0.92631 seconds (0 MB, 0 rounds)
Time300 = 0.820553 seconds (0 MB, 0 rounds)
Time400 = 0.862104 seconds (0 MB, 0 rounds)
Time500 = 0.861831 seconds (0 MB, 0 rounds)
Time600 = 0.175654 seconds (0 MB, 0 rounds)
Data sent = 0.311514 MB in ~72231 rounds (party 0 only; use '-v' for more details)
Global data sent = 0.892942 MB (all parties)
Done
Measure performance for 300 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 0 comorbidity -pn 12382 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 1 comorbidity -pn 12382 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 2 comorbidity -pn 12382 -h localhost
Using statistical security parameter 40
Executing comorbidity with 300 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 5.616e-06
Stopped timer 10 at 2.39673 (0 MB, 0 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.01e-06
Stopped timer 100 at 4.3835e-05 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 7.69e-07
Starting timer 300 at 0 (0 MB, 0 rounds) after 7.24e-07
Stopped timer 300 at 2.04925 (0 MB, 0 rounds)
Stopped timer 200 at 2.2062 (0 MB, 0 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.239e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 9.2e-07
Stopped timer 500 at 2.17381 (0 MB, 0 rounds)
Stopped timer 400 at 2.17421 (0 MB, 0 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.298e-06
Stopped timer 600 at 0.262185 (0 MB, 0 rounds)
Passing around 0.705818 MB in 171825 rounds, taking 4.13304 seconds
Receiving directly 9.6e-05 MB in 6 rounds, taking 0.00122185 seconds
Sending directly 0.031296 MB in 10 rounds, taking 0.000978706 seconds
The following benchmarks are including preprocessing (offline phase).
Time = 7.04106 seconds 
Time10 = 2.39673 seconds (0 MB, 0 rounds)
Time100 = 4.3835e-05 seconds (0 MB, 0 rounds)
Time200 = 2.2062 seconds (0 MB, 0 rounds)
Time300 = 2.04925 seconds (0 MB, 0 rounds)
Time400 = 2.17421 seconds (0 MB, 0 rounds)
Time500 = 2.17381 seconds (0 MB, 0 rounds)
Time600 = 0.262185 seconds (0 MB, 0 rounds)
Data sent = 0.737114 MB in ~171842 rounds (party 0 only; use '-v' for more details)
Global data sent = 2.14894 MB (all parties)
Done
Measure performance for 400 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 0 comorbidity -pn 13683 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 1 comorbidity -pn 13683 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 2 comorbidity -pn 13683 -h localhost
Using statistical security parameter 40
Executing comorbidity with 400 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 4.555e-06
Stopped timer 10 at 3.16711 (0 MB, 0 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.214e-06
Stopped timer 100 at 3.6758e-05 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 7.49e-07
Starting timer 300 at 0 (0 MB, 0 rounds) after 7.96e-07
Stopped timer 300 at 2.04637 (0 MB, 0 rounds)
Stopped timer 200 at 2.25468 (0 MB, 0 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.151e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 9.56e-07
Stopped timer 500 at 2.18882 (0 MB, 0 rounds)
Stopped timer 400 at 2.18946 (0 MB, 0 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.468e-06
Stopped timer 600 at 0.345427 (0 MB, 0 rounds)
Passing around 0.720618 MB in 177225 rounds, taking 4.25441 seconds
Receiving directly 0.000128 MB in 8 rounds, taking 0.000709122 seconds
Sending directly 0.041728 MB in 14 rounds, taking 0.00127829 seconds
The following benchmarks are including preprocessing (offline phase).
Time = 7.95821 seconds 
Time10 = 3.16711 seconds (0 MB, 0 rounds)
Time100 = 3.6758e-05 seconds (0 MB, 0 rounds)
Time200 = 2.25468 seconds (0 MB, 0 rounds)
Time300 = 2.04637 seconds (0 MB, 0 rounds)
Time400 = 2.18946 seconds (0 MB, 0 rounds)
Time500 = 2.18882 seconds (0 MB, 0 rounds)
Time600 = 0.345427 seconds (0 MB, 0 rounds)
Data sent = 0.762346 MB in ~177248 rounds (party 0 only; use '-v' for more details)
Global data sent = 2.20384 MB (all parties)
Done
Measure performance for 500 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 0 comorbidity -pn 11763 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 1 comorbidity -pn 11763 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 2 comorbidity -pn 11763 -h localhost
Using statistical security parameter 40
Executing comorbidity with 500 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 5.358e-06
Stopped timer 10 at 3.94197 (0 MB, 0 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.103e-06
Stopped timer 100 at 4.5504e-05 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.128e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 8.34e-07
Stopped timer 300 at 2.07525 (0 MB, 0 rounds)
Stopped timer 200 at 2.3428 (0 MB, 0 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.105e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 8.56e-07
Stopped timer 500 at 2.16342 (0 MB, 0 rounds)
Stopped timer 400 at 2.1641 (0 MB, 0 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.252e-06
Stopped timer 600 at 0.428218 (0 MB, 0 rounds)
Passing around 0.735418 MB in 182625 rounds, taking 4.40601 seconds
Receiving directly 0.000144 MB in 9 rounds, taking 0.000938436 seconds
Sending directly 0.052144 MB in 16 rounds, taking 0.00143895 seconds
The following benchmarks are including preprocessing (offline phase).
Time = 8.87876 seconds 
Time10 = 3.94197 seconds (0 MB, 0 rounds)
Time100 = 4.5504e-05 seconds (0 MB, 0 rounds)
Time200 = 2.3428 seconds (0 MB, 0 rounds)
Time300 = 2.07525 seconds (0 MB, 0 rounds)
Time400 = 2.1641 seconds (0 MB, 0 rounds)
Time500 = 2.16342 seconds (0 MB, 0 rounds)
Time600 = 0.428218 seconds (0 MB, 0 rounds)
Data sent = 0.787562 MB in ~182651 rounds (party 0 only; use '-v' for more details)
Global data sent = 2.25869 MB (all parties)
Done
Measure performance for 600 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 0 comorbidity -pn 18676 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 1 comorbidity -pn 18676 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 2 comorbidity -pn 18676 -h localhost
Using statistical security parameter 40
Executing comorbidity with 600 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 5.492e-06
Stopped timer 10 at 4.89372 (0 MB, 0 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 9.82e-07
Stopped timer 100 at 7.1456e-05 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 7.59e-07
Starting timer 300 at 0 (0 MB, 0 rounds) after 8.06e-07
Stopped timer 300 at 5.10543 (0 MB, 0 rounds)
Stopped timer 200 at 5.42391 (0 MB, 0 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.157e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 9.04e-07
Stopped timer 500 at 5.37496 (0 MB, 0 rounds)
Stopped timer 400 at 5.37576 (0 MB, 0 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.362e-06
Stopped timer 600 at 0.525122 (0 MB, 0 rounds)
Passing around 1.72507 MB in 417401 rounds, taking 10.0571 seconds
Receiving directly 0.00016 MB in 10 rounds, taking 0.0166279 seconds
Sending directly 0.06256 MB in 18 rounds, taking 0.00169443 seconds
The following benchmarks are including preprocessing (offline phase).
Time = 16.2202 seconds 
Time10 = 4.89372 seconds (0 MB, 0 rounds)
Time100 = 7.1456e-05 seconds (0 MB, 0 rounds)
Time200 = 5.42391 seconds (0 MB, 0 rounds)
Time300 = 5.10543 seconds (0 MB, 0 rounds)
Time400 = 5.37576 seconds (0 MB, 0 rounds)
Time500 = 5.37496 seconds (0 MB, 0 rounds)
Time600 = 0.525122 seconds (0 MB, 0 rounds)
Data sent = 1.78763 MB in ~417430 rounds (party 0 only; use '-v' for more details)
Global data sent = 5.23808 MB (all parties)
Done
Measure performance for 700 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 0 comorbidity -pn 12458 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 1 comorbidity -pn 12458 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 2 comorbidity -pn 12458 -h localhost
Using statistical security parameter 40
Executing comorbidity with 700 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 5.646e-06
Stopped timer 10 at 5.66264 (0 MB, 0 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.289e-06
Stopped timer 100 at 6.6194e-05 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 8.59e-07
Starting timer 300 at 0 (0 MB, 0 rounds) after 8.53e-07
Stopped timer 300 at 5.12352 (0 MB, 0 rounds)
Stopped timer 200 at 5.4813 (0 MB, 0 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.276e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 9.87e-07
Stopped timer 500 at 5.20536 (0 MB, 0 rounds)
Stopped timer 400 at 5.2063 (0 MB, 0 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 2.174e-06
Stopped timer 600 at 0.609147 (0 MB, 0 rounds)
Passing around 1.73987 MB in 422801 rounds, taking 10.05 seconds
Receiving directly 0.000192 MB in 12 rounds, taking 0.00202294 seconds
Sending directly 0.072992 MB in 22 rounds, taking 0.00218497 seconds
The following benchmarks are including preprocessing (offline phase).
Time = 16.9611 seconds 
Time10 = 5.66264 seconds (0 MB, 0 rounds)
Time100 = 6.6194e-05 seconds (0 MB, 0 rounds)
Time200 = 5.4813 seconds (0 MB, 0 rounds)
Time300 = 5.12352 seconds (0 MB, 0 rounds)
Time400 = 5.2063 seconds (0 MB, 0 rounds)
Time500 = 5.20536 seconds (0 MB, 0 rounds)
Time600 = 0.609147 seconds (0 MB, 0 rounds)
Data sent = 1.81286 MB in ~422836 rounds (party 0 only; use '-v' for more details)
Global data sent = 5.29297 MB (all parties)
Done
Measure performance for 800 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 0 comorbidity -pn 11797 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 1 comorbidity -pn 11797 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 2 comorbidity -pn 11797 -h localhost
Using statistical security parameter 40
Executing comorbidity with 800 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 4.226e-06
Stopped timer 10 at 6.4168 (0 MB, 0 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 9.16e-07
Stopped timer 100 at 9.0077e-05 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 7.81e-07
Starting timer 300 at 0 (0 MB, 0 rounds) after 7.55e-07
Stopped timer 300 at 4.99662 (0 MB, 0 rounds)
Stopped timer 200 at 5.40755 (0 MB, 0 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.191e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 7.67e-07
Stopped timer 500 at 5.23507 (0 MB, 0 rounds)
Stopped timer 400 at 5.23613 (0 MB, 0 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.436e-06
Stopped timer 600 at 0.68592 (0 MB, 0 rounds)
Passing around 1.75467 MB in 428201 rounds, taking 10.1366 seconds
Receiving directly 0.000208 MB in 13 rounds, taking 0.00087589 seconds
Sending directly 0.083408 MB in 24 rounds, taking 0.00245558 seconds
The following benchmarks are including preprocessing (offline phase).
Time = 17.748 seconds 
Time10 = 6.4168 seconds (0 MB, 0 rounds)
Time100 = 9.0077e-05 seconds (0 MB, 0 rounds)
Time200 = 5.40755 seconds (0 MB, 0 rounds)
Time300 = 4.99662 seconds (0 MB, 0 rounds)
Time400 = 5.23613 seconds (0 MB, 0 rounds)
Time500 = 5.23507 seconds (0 MB, 0 rounds)
Time600 = 0.68592 seconds (0 MB, 0 rounds)
Data sent = 1.83807 MB in ~428239 rounds (party 0 only; use '-v' for more details)
Global data sent = 5.34782 MB (all parties)
Done
Measure performance for 900 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 0 comorbidity -pn 12394 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 1 comorbidity -pn 12394 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 2 comorbidity -pn 12394 -h localhost
Using statistical security parameter 40
Executing comorbidity with 900 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 5.552e-06
Stopped timer 10 at 7.24144 (0 MB, 0 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 9.79e-07
Stopped timer 100 at 9.4814e-05 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 8.48e-07
Starting timer 300 at 0 (0 MB, 0 rounds) after 8.01e-07
Stopped timer 300 at 4.97915 (0 MB, 0 rounds)
Stopped timer 200 at 5.42446 (0 MB, 0 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.035e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 8.12e-07
Stopped timer 500 at 5.20653 (0 MB, 0 rounds)
Stopped timer 400 at 5.20773 (0 MB, 0 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.371e-06
Stopped timer 600 at 0.766192 (0 MB, 0 rounds)
Passing around 1.76947 MB in 433601 rounds, taking 10.1274 seconds
Receiving directly 0.000224 MB in 14 rounds, taking 0.0361344 seconds
Sending directly 0.093824 MB in 26 rounds, taking 0.00263695 seconds
The following benchmarks are including preprocessing (offline phase).
Time = 18.6415 seconds 
Time10 = 7.24144 seconds (0 MB, 0 rounds)
Time100 = 9.4814e-05 seconds (0 MB, 0 rounds)
Time200 = 5.42446 seconds (0 MB, 0 rounds)
Time300 = 4.97915 seconds (0 MB, 0 rounds)
Time400 = 5.20773 seconds (0 MB, 0 rounds)
Time500 = 5.20653 seconds (0 MB, 0 rounds)
Time600 = 0.766192 seconds (0 MB, 0 rounds)
Data sent = 1.86329 MB in ~433642 rounds (party 0 only; use '-v' for more details)
Global data sent = 5.40267 MB (all parties)
Done
Measure performance for 1000 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 0 comorbidity -pn 15799 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 1 comorbidity -pn 15799 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 2 comorbidity -pn 15799 -h localhost
Using statistical security parameter 40
Executing comorbidity with 1000 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 6.066e-06
Stopped timer 10 at 8.21438 (0 MB, 0 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.032e-06
Stopped timer 100 at 0.000107616 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 7.67e-07
Starting timer 300 at 0 (0 MB, 0 rounds) after 7.14e-07
Stopped timer 300 at 5.13099 (0 MB, 0 rounds)
Stopped timer 200 at 5.65645 (0 MB, 0 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.012e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 8.16e-07
Stopped timer 500 at 5.27817 (0 MB, 0 rounds)
Stopped timer 400 at 5.27949 (0 MB, 0 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.387e-06
Stopped timer 600 at 0.86064 (0 MB, 0 rounds)
Passing around 1.78427 MB in 439001 rounds, taking 10.5296 seconds
Receiving directly 0.00024 MB in 15 rounds, taking 0.0491602 seconds
Sending directly 0.10424 MB in 28 rounds, taking 0.00264938 seconds
The following benchmarks are including preprocessing (offline phase).
Time = 20.0128 seconds 
Time10 = 8.21438 seconds (0 MB, 0 rounds)
Time100 = 0.000107616 seconds (0 MB, 0 rounds)
Time200 = 5.65645 seconds (0 MB, 0 rounds)
Time300 = 5.13099 seconds (0 MB, 0 rounds)
Time400 = 5.27949 seconds (0 MB, 0 rounds)
Time500 = 5.27817 seconds (0 MB, 0 rounds)
Time600 = 0.86064 seconds (0 MB, 0 rounds)
Data sent = 1.88851 MB in ~439045 rounds (party 0 only; use '-v' for more details)
Global data sent = 5.45752 MB (all parties)
Done
Measure performance for 1100 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 0 comorbidity -pn 14776 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 1 comorbidity -pn 14776 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 2 comorbidity -pn 14776 -h localhost
Using statistical security parameter 40
Executing comorbidity with 1100 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 5.687e-06
Stopped timer 10 at 8.88857 (0 MB, 0 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.064e-06
Stopped timer 100 at 0.000104056 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 8.11e-07
Starting timer 300 at 0 (0 MB, 0 rounds) after 8.21e-07
Stopped timer 300 at 12.2463 (0 MB, 0 rounds)
Stopped timer 200 at 12.8165 (0 MB, 0 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.16e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 8.94e-07
Stopped timer 500 at 12.7764 (0 MB, 0 rounds)
Stopped timer 400 at 12.7779 (0 MB, 0 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.409e-06
Stopped timer 600 at 0.955418 (0 MB, 0 rounds)
Passing around 4.13174 MB in 993265 rounds, taking 23.5685 seconds
Receiving directly 0.000272 MB in 17 rounds, taking 0.00145565 seconds
Sending directly 0.114672 MB in 32 rounds, taking 0.0030934 seconds
The following benchmarks are including preprocessing (offline phase).
Time = 35.4402 seconds 
Time10 = 8.88857 seconds (0 MB, 0 rounds)
Time100 = 0.000104056 seconds (0 MB, 0 rounds)
Time200 = 12.8165 seconds (0 MB, 0 rounds)
Time300 = 12.2463 seconds (0 MB, 0 rounds)
Time400 = 12.7779 seconds (0 MB, 0 rounds)
Time500 = 12.7764 seconds (0 MB, 0 rounds)
Time600 = 0.955418 seconds (0 MB, 0 rounds)
Data sent = 4.24641 MB in ~993315 rounds (party 0 only; use '-v' for more details)
Global data sent = 12.5104 MB (all parties)
Done
Measure performance for 1200 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 0 comorbidity -pn 11048 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 1 comorbidity -pn 11048 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 2 comorbidity -pn 11048 -h localhost
Using statistical security parameter 40
Executing comorbidity with 1200 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 5.436e-06
Stopped timer 10 at 9.67644 (0 MB, 0 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 9.64e-07
Stopped timer 100 at 0.000119081 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 8.8e-07
Starting timer 300 at 0 (0 MB, 0 rounds) after 8.04e-07
Stopped timer 300 at 12.552 (0 MB, 0 rounds)
Stopped timer 200 at 13.1959 (0 MB, 0 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.944e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.264e-06
Stopped timer 500 at 13.1982 (0 MB, 0 rounds)
Stopped timer 400 at 13.1998 (0 MB, 0 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.373e-06
Stopped timer 600 at 1.06401 (0 MB, 0 rounds)
Passing around 4.14654 MB in 998665 rounds, taking 24.4428 seconds
Receiving directly 0.000288 MB in 18 rounds, taking 0.042939 seconds
Sending directly 0.125088 MB in 34 rounds, taking 0.00345223 seconds
The following benchmarks are including preprocessing (offline phase).
Time = 37.1379 seconds 
Time10 = 9.67644 seconds (0 MB, 0 rounds)
Time100 = 0.000119081 seconds (0 MB, 0 rounds)
Time200 = 13.1959 seconds (0 MB, 0 rounds)
Time300 = 12.552 seconds (0 MB, 0 rounds)
Time400 = 13.1998 seconds (0 MB, 0 rounds)
Time500 = 13.1982 seconds (0 MB, 0 rounds)
Time600 = 1.06401 seconds (0 MB, 0 rounds)
Data sent = 4.27163 MB in ~998718 rounds (party 0 only; use '-v' for more details)
Global data sent = 12.5653 MB (all parties)
Done
Measure performance for 1300 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 0 comorbidity -pn 16769 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 1 comorbidity -pn 16769 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 2 comorbidity -pn 16769 -h localhost
Using statistical security parameter 40
Executing comorbidity with 1300 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 5.134e-06
Stopped timer 10 at 10.6021 (0 MB, 0 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 9.54e-07
Stopped timer 100 at 0.00013285 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 8.29e-07
Starting timer 300 at 0 (0 MB, 0 rounds) after 7.6e-07
Stopped timer 300 at 12.2894 (0 MB, 0 rounds)
Stopped timer 200 at 12.9795 (0 MB, 0 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.25e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 9.6e-07
Stopped timer 500 at 13.0783 (0 MB, 0 rounds)
Stopped timer 400 at 13.08 (0 MB, 0 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.375e-06
Stopped timer 600 at 1.14479 (0 MB, 0 rounds)
Passing around 4.16134 MB in 1004065 rounds, taking 24.1325 seconds
Receiving directly 0.000304 MB in 19 rounds, taking 0.00182957 seconds
Sending directly 0.135504 MB in 36 rounds, taking 0.00364179 seconds
The following benchmarks are including preprocessing (offline phase).
Time = 37.8083 seconds 
Time10 = 10.6021 seconds (0 MB, 0 rounds)
Time100 = 0.00013285 seconds (0 MB, 0 rounds)
Time200 = 12.9795 seconds (0 MB, 0 rounds)
Time300 = 12.2894 seconds (0 MB, 0 rounds)
Time400 = 13.08 seconds (0 MB, 0 rounds)
Time500 = 13.0783 seconds (0 MB, 0 rounds)
Time600 = 1.14479 seconds (0 MB, 0 rounds)
Data sent = 4.29684 MB in ~1004121 rounds (party 0 only; use '-v' for more details)
Global data sent = 12.6201 MB (all parties)
Done
Measure performance for 1400 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 0 comorbidity -pn 17131 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 1 comorbidity -pn 17131 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 2 comorbidity -pn 17131 -h localhost
Using statistical security parameter 40
Executing comorbidity with 1400 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 4.228e-06
Stopped timer 10 at 11.3334 (0 MB, 0 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.148e-06
Stopped timer 100 at 0.000125867 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 8.98e-07
Starting timer 300 at 0 (0 MB, 0 rounds) after 8.25e-07
Stopped timer 300 at 11.6853 (0 MB, 0 rounds)
Stopped timer 200 at 12.4032 (0 MB, 0 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.02e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 8.96e-07
Stopped timer 500 at 12.8114 (0 MB, 0 rounds)
Stopped timer 400 at 12.8132 (0 MB, 0 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.45e-06
Stopped timer 600 at 1.20475 (0 MB, 0 rounds)
Passing around 4.17614 MB in 1009465 rounds, taking 23.466 seconds
Receiving directly 0.000336 MB in 21 rounds, taking 0.00229439 seconds
Sending directly 0.145936 MB in 40 rounds, taking 0.00398565 seconds
The following benchmarks are including preprocessing (offline phase).
Time = 37.7562 seconds 
Time10 = 11.3334 seconds (0 MB, 0 rounds)
Time100 = 0.000125867 seconds (0 MB, 0 rounds)
Time200 = 12.4032 seconds (0 MB, 0 rounds)
Time300 = 11.6853 seconds (0 MB, 0 rounds)
Time400 = 12.8132 seconds (0 MB, 0 rounds)
Time500 = 12.8114 seconds (0 MB, 0 rounds)
Time600 = 1.20475 seconds (0 MB, 0 rounds)
Data sent = 4.32207 MB in ~1009527 rounds (party 0 only; use '-v' for more details)
Global data sent = 12.675 MB (all parties)
Done
Measure performance for 1500 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 0 comorbidity -pn 19366 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 1 comorbidity -pn 19366 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 2 comorbidity -pn 19366 -h localhost
Using statistical security parameter 40
Executing comorbidity with 1500 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 5.382e-06
Stopped timer 10 at 12.1046 (0 MB, 0 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.188e-06
Stopped timer 100 at 0.000155152 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 8.45e-07
Starting timer 300 at 0 (0 MB, 0 rounds) after 7.75e-07
Stopped timer 300 at 12.3015 (0 MB, 0 rounds)
Stopped timer 200 at 13.0918 (0 MB, 0 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.528e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 9.36e-07
Stopped timer 500 at 12.962 (0 MB, 0 rounds)
Stopped timer 400 at 12.964 (0 MB, 0 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.414e-06
Stopped timer 600 at 1.30425 (0 MB, 0 rounds)
Passing around 4.19094 MB in 1014865 rounds, taking 24.295 seconds
Receiving directly 0.000352 MB in 22 rounds, taking 0.00347544 seconds
Sending directly 0.156352 MB in 42 rounds, taking 0.00410058 seconds
The following benchmarks are including preprocessing (offline phase).
Time = 39.4664 seconds 
Time10 = 12.1046 seconds (0 MB, 0 rounds)
Time100 = 0.000155152 seconds (0 MB, 0 rounds)
Time200 = 13.0918 seconds (0 MB, 0 rounds)
Time300 = 12.3015 seconds (0 MB, 0 rounds)
Time400 = 12.964 seconds (0 MB, 0 rounds)
Time500 = 12.962 seconds (0 MB, 0 rounds)
Time600 = 1.30425 seconds (0 MB, 0 rounds)
Data sent = 4.34729 MB in ~1014930 rounds (party 0 only; use '-v' for more details)
Global data sent = 12.7299 MB (all parties)
Done
Measure performance for 1600 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 0 comorbidity -pn 13627 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 1 comorbidity -pn 13627 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 2 comorbidity -pn 13627 -h localhost
Using statistical security parameter 40
Executing comorbidity with 1600 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 6.363e-06
Stopped timer 10 at 13.2686 (0 MB, 0 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 9.69e-07
Stopped timer 100 at 0.000157739 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 9.47e-07
Starting timer 300 at 0 (0 MB, 0 rounds) after 7.86e-07
Stopped timer 300 at 12.7941 (0 MB, 0 rounds)
Stopped timer 200 at 13.6652 (0 MB, 0 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.719e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.007e-06
Stopped timer 500 at 13.5187 (0 MB, 0 rounds)
Stopped timer 400 at 13.5224 (0 MB, 0 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.982e-06
Stopped timer 600 at 1.45978 (0 MB, 0 rounds)
Passing around 4.20574 MB in 1020265 rounds, taking 25.4085 seconds
Receiving directly 0.000368 MB in 23 rounds, taking 0.0283169 seconds
Sending directly 0.166768 MB in 44 rounds, taking 0.00472524 seconds
The following benchmarks are including preprocessing (offline phase).
Time = 41.9178 seconds 
Time10 = 13.2686 seconds (0 MB, 0 rounds)
Time100 = 0.000157739 seconds (0 MB, 0 rounds)
Time200 = 13.6652 seconds (0 MB, 0 rounds)
Time300 = 12.7941 seconds (0 MB, 0 rounds)
Time400 = 13.5224 seconds (0 MB, 0 rounds)
Time500 = 13.5187 seconds (0 MB, 0 rounds)
Time600 = 1.45978 seconds (0 MB, 0 rounds)
Data sent = 4.37251 MB in ~1020333 rounds (party 0 only; use '-v' for more details)
Global data sent = 12.7847 MB (all parties)
Done
Measure performance for 1700 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 0 comorbidity -pn 19680 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 1 comorbidity -pn 19680 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 2 comorbidity -pn 19680 -h localhost
Using statistical security parameter 40
Executing comorbidity with 1700 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 3.918e-06
Stopped timer 10 at 14.1684 (0 MB, 0 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.135e-06
Stopped timer 100 at 0.000161455 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 9.14e-07
Starting timer 300 at 0 (0 MB, 0 rounds) after 8.16e-07
Stopped timer 300 at 12.5252 (0 MB, 0 rounds)
Stopped timer 200 at 13.4351 (0 MB, 0 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.611e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 9.77e-07
Stopped timer 500 at 13.2712 (0 MB, 0 rounds)
Stopped timer 400 at 13.2734 (0 MB, 0 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.586e-06
Stopped timer 600 at 1.48117 (0 MB, 0 rounds)
Passing around 4.22054 MB in 1025665 rounds, taking 25.0838 seconds
Receiving directly 0.0004 MB in 25 rounds, taking 0.00190689 seconds
Sending directly 0.1772 MB in 48 rounds, taking 0.00514875 seconds
The following benchmarks are including preprocessing (offline phase).
Time = 42.36 seconds 
Time10 = 14.1684 seconds (0 MB, 0 rounds)
Time100 = 0.000161455 seconds (0 MB, 0 rounds)
Time200 = 13.4351 seconds (0 MB, 0 rounds)
Time300 = 12.5252 seconds (0 MB, 0 rounds)
Time400 = 13.2734 seconds (0 MB, 0 rounds)
Time500 = 13.2712 seconds (0 MB, 0 rounds)
Time600 = 1.48117 seconds (0 MB, 0 rounds)
Data sent = 4.39774 MB in ~1025739 rounds (party 0 only; use '-v' for more details)
Global data sent = 12.8396 MB (all parties)
Done
Measure performance for 1800 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 0 comorbidity -pn 13263 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 1 comorbidity -pn 13263 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 2 comorbidity -pn 13263 -h localhost
Using statistical security parameter 40
Executing comorbidity with 1800 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 4.616e-06
Stopped timer 10 at 17.5771 (0 MB, 0 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.097e-06
Stopped timer 100 at 0.000177491 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.09e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 9.33e-07
Stopped timer 300 at 14.5822 (0 MB, 0 rounds)
Stopped timer 200 at 15.6735 (0 MB, 0 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.451e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.019e-06
Stopped timer 500 at 15.1152 (0 MB, 0 rounds)
Stopped timer 400 at 15.1179 (0 MB, 0 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.674e-06
Stopped timer 600 at 1.84517 (0 MB, 0 rounds)
Passing around 4.23534 MB in 1031065 rounds, taking 28.9304 seconds
Receiving directly 0.000416 MB in 26 rounds, taking 0.00234901 seconds
Sending directly 0.187616 MB in 50 rounds, taking 0.00431049 seconds
The following benchmarks are including preprocessing (offline phase).
Time = 50.2154 seconds 
Time10 = 17.5771 seconds (0 MB, 0 rounds)
Time100 = 0.000177491 seconds (0 MB, 0 rounds)
Time200 = 15.6735 seconds (0 MB, 0 rounds)
Time300 = 14.5822 seconds (0 MB, 0 rounds)
Time400 = 15.1179 seconds (0 MB, 0 rounds)
Time500 = 15.1152 seconds (0 MB, 0 rounds)
Time600 = 1.84517 seconds (0 MB, 0 rounds)
Data sent = 4.42295 MB in ~1031142 rounds (party 0 only; use '-v' for more details)
Global data sent = 12.8945 MB (all parties)
Done
Measure performance for 1900 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 0 comorbidity -pn 10473 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 1 comorbidity -pn 10473 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 2 comorbidity -pn 10473 -h localhost
Using statistical security parameter 40
Executing comorbidity with 1900 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 4.41e-06
Stopped timer 10 at 18.5797 (0 MB, 0 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.278e-06
Stopped timer 100 at 0.000207607 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.22e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 9.91e-07
Stopped timer 300 at 14.3696 (0 MB, 0 rounds)
Stopped timer 200 at 15.5459 (0 MB, 0 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.674e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.472e-06
Stopped timer 500 at 15.2296 (0 MB, 0 rounds)
Stopped timer 400 at 15.2324 (0 MB, 0 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.665e-06
Stopped timer 600 at 1.9248 (0 MB, 0 rounds)
Passing around 4.25014 MB in 1036465 rounds, taking 28.9329 seconds
Receiving directly 0.000432 MB in 27 rounds, taking 0.055471 seconds
Sending directly 0.198032 MB in 52 rounds, taking 0.00461414 seconds
The following benchmarks are including preprocessing (offline phase).
Time = 51.2846 seconds 
Time10 = 18.5797 seconds (0 MB, 0 rounds)
Time100 = 0.000207607 seconds (0 MB, 0 rounds)
Time200 = 15.5459 seconds (0 MB, 0 rounds)
Time300 = 14.3696 seconds (0 MB, 0 rounds)
Time400 = 15.2324 seconds (0 MB, 0 rounds)
Time500 = 15.2296 seconds (0 MB, 0 rounds)
Time600 = 1.9248 seconds (0 MB, 0 rounds)
Data sent = 4.44817 MB in ~1036545 rounds (party 0 only; use '-v' for more details)
Global data sent = 12.9493 MB (all parties)
Done
Measure performance for 2000 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 0 comorbidity -pn 12563 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 1 comorbidity -pn 12563 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 2 comorbidity -pn 12563 -h localhost
Using statistical security parameter 40
Executing comorbidity with 2000 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 5.375e-06
Stopped timer 10 at 19.8079 (0 MB, 0 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.412e-06
Stopped timer 100 at 0.00021519 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.13e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 9.83e-07
Stopped timer 300 at 14.1287 (0 MB, 0 rounds)
Stopped timer 200 at 15.3167 (0 MB, 0 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.472e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.009e-06
Stopped timer 500 at 15.1166 (0 MB, 0 rounds)
Stopped timer 400 at 15.1196 (0 MB, 0 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.513e-06
Stopped timer 600 at 2.02233 (0 MB, 0 rounds)
Passing around 4.26494 MB in 1041865 rounds, taking 28.7059 seconds
Receiving directly 0.000448 MB in 28 rounds, taking 0.0137315 seconds
Sending directly 0.208448 MB in 54 rounds, taking 0.00494716 seconds
The following benchmarks are including preprocessing (offline phase).
Time = 52.2682 seconds 
Time10 = 19.8079 seconds (0 MB, 0 rounds)
Time100 = 0.00021519 seconds (0 MB, 0 rounds)
Time200 = 15.3167 seconds (0 MB, 0 rounds)
Time300 = 14.1287 seconds (0 MB, 0 rounds)
Time400 = 15.1196 seconds (0 MB, 0 rounds)
Time500 = 15.1166 seconds (0 MB, 0 rounds)
Time600 = 2.02233 seconds (0 MB, 0 rounds)
Data sent = 4.47339 MB in ~1041948 rounds (party 0 only; use '-v' for more details)
Global data sent = 13.0042 MB (all parties)
Done
Measure performance for 4000 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 0 comorbidity -pn 10734 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 1 comorbidity -pn 10734 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 2 comorbidity -pn 10734 -h localhost
Using statistical security parameter 40
Executing comorbidity with 4000 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 5.574e-06
Stopped timer 10 at 39.6542 (0 MB, 0 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.576e-06
Stopped timer 100 at 0.000410813 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.211e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 1.115e-06
Stopped timer 300 at 34.743 (0 MB, 0 rounds)
Stopped timer 200 at 37.202 (0 MB, 0 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.914e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.127e-06
Stopped timer 500 at 36.7419 (0 MB, 0 rounds)
Stopped timer 400 at 36.7479 (0 MB, 0 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.66e-06
Stopped timer 600 at 4.03242 (0 MB, 0 rounds)
Passing around 10.0619 MB in 2444201 rounds, taking 69.1276 seconds
Receiving directly 0.000864 MB in 54 rounds, taking 0.382038 seconds
Sending directly 0.416864 MB in 106 rounds, taking 0.00913891 seconds
The following benchmarks are including preprocessing (offline phase).
Time = 117.639 seconds 
Time10 = 39.6542 seconds (0 MB, 0 rounds)
Time100 = 0.000410813 seconds (0 MB, 0 rounds)
Time200 = 37.202 seconds (0 MB, 0 rounds)
Time300 = 34.743 seconds (0 MB, 0 rounds)
Time400 = 36.7479 seconds (0 MB, 0 rounds)
Time500 = 36.7419 seconds (0 MB, 0 rounds)
Time600 = 4.03242 seconds (0 MB, 0 rounds)
Data sent = 10.4787 MB in ~2444362 rounds (party 0 only; use '-v' for more details)
Global data sent = 30.6042 MB (all parties)
Done
Measure performance for 6000 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 0 comorbidity -pn 17632 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 1 comorbidity -pn 17632 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 2 comorbidity -pn 17632 -h localhost
Using statistical security parameter 40
Executing comorbidity with 6000 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 5.216e-06
Stopped timer 10 at 49.7674 (0 MB, 0 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.056e-06
Stopped timer 100 at 0.000560488 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.258e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 8.62e-07
Stopped timer 300 at 69.6103 (0 MB, 0 rounds)
Stopped timer 200 at 72.7758 (0 MB, 0 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.288e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.017e-06
Stopped timer 500 at 73.4708 (0 MB, 0 rounds)
Stopped timer 400 at 73.4786 (0 MB, 0 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.919e-06
Stopped timer 600 at 5.17412 (0 MB, 0 rounds)
Passing around 23.1702 MB in 5566857 rounds, taking 134.336 seconds
Receiving directly 0.00128 MB in 80 rounds, taking 0.401374 seconds
Sending directly 0.62528 MB in 158 rounds, taking 0.0166893 seconds
The following benchmarks are including preprocessing (offline phase).
Time = 201.198 seconds 
Time10 = 49.7674 seconds (0 MB, 0 rounds)
Time100 = 0.000560488 seconds (0 MB, 0 rounds)
Time200 = 72.7758 seconds (0 MB, 0 rounds)
Time300 = 69.6103 seconds (0 MB, 0 rounds)
Time400 = 73.4786 seconds (0 MB, 0 rounds)
Time500 = 73.4708 seconds (0 MB, 0 rounds)
Time600 = 5.17412 seconds (0 MB, 0 rounds)
Data sent = 23.7954 MB in ~5567096 rounds (party 0 only; use '-v' for more details)
Global data sent = 70.1383 MB (all parties)
Done
Measure performance for 8000 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 0 comorbidity -pn 17271 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 1 comorbidity -pn 17271 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 2 comorbidity -pn 17271 -h localhost
Using statistical security parameter 40
Executing comorbidity with 8000 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 5.117e-06
Stopped timer 10 at 67.3819 (0 MB, 0 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 9.65e-07
Stopped timer 100 at 0.000752813 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.342e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 8.22e-07
Stopped timer 300 at 69.7986 (0 MB, 0 rounds)
Stopped timer 200 at 74.0138 (0 MB, 0 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.513e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.1e-06
Stopped timer 500 at 73.6542 (0 MB, 0 rounds)
Stopped timer 400 at 73.6646 (0 MB, 0 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.451e-06
Stopped timer 600 at 7.12598 (0 MB, 0 rounds)
Passing around 23.4662 MB in 5674857 rounds, taking 137.684 seconds
Receiving directly 0.001696 MB in 106 rounds, taking 0.978961 seconds
Sending directly 0.833696 MB in 210 rounds, taking 0.0216393 seconds
The following benchmarks are including preprocessing (offline phase).
Time = 222.189 seconds 
Time10 = 67.3819 seconds (0 MB, 0 rounds)
Time100 = 0.000752813 seconds (0 MB, 0 rounds)
Time200 = 74.0138 seconds (0 MB, 0 rounds)
Time300 = 69.7986 seconds (0 MB, 0 rounds)
Time400 = 73.6646 seconds (0 MB, 0 rounds)
Time500 = 73.6542 seconds (0 MB, 0 rounds)
Time600 = 7.12598 seconds (0 MB, 0 rounds)
Data sent = 24.2998 MB in ~5675174 rounds (party 0 only; use '-v' for more details)
Global data sent = 71.2356 MB (all parties)
Done
Measure performance for 10000 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 0 comorbidity -pn 14454 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 1 comorbidity -pn 14454 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 2 comorbidity -pn 14454 -h localhost
Using statistical security parameter 40
Executing comorbidity with 10000 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 5.522e-06
Stopped timer 10 at 83.2888 (0 MB, 0 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.064e-06
Stopped timer 100 at 0.000945802 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 9.63e-07
Starting timer 300 at 0 (0 MB, 0 rounds) after 8.12e-07
Stopped timer 300 at 166.335 (0 MB, 0 rounds)
Stopped timer 200 at 171.63 (0 MB, 0 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.303e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 9.15e-07
Stopped timer 500 at 174.613 (0 MB, 0 rounds)
Stopped timer 400 at 174.626 (0 MB, 0 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.582e-06
Stopped timer 600 at 9.01599 (0 MB, 0 rounds)
Passing around 53.2861 MB in 12729673 rounds, taking 316.02 seconds
Receiving directly 0.002112 MB in 132 rounds, taking 0.0171021 seconds
Sending directly 1.04211 MB in 262 rounds, taking 0.0274728 seconds
The following benchmarks are including preprocessing (offline phase).
Time = 438.564 seconds 
Time10 = 83.2888 seconds (0 MB, 0 rounds)
Time100 = 0.000945802 seconds (0 MB, 0 rounds)
Time200 = 171.63 seconds (0 MB, 0 rounds)
Time300 = 166.335 seconds (0 MB, 0 rounds)
Time400 = 174.626 seconds (0 MB, 0 rounds)
Time500 = 174.613 seconds (0 MB, 0 rounds)
Time600 = 9.01599 seconds (0 MB, 0 rounds)
Data sent = 54.3282 MB in ~12730068 rounds (party 0 only; use '-v' for more details)
Global data sent = 160.905 MB (all parties)
Done
Measure performance for 20000 rows
Compiling high-level code...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 0 comorbidity -pn 14863 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 1 comorbidity -pn 14863 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 2 comorbidity -pn 14863 -h localhost
Using statistical security parameter 40
Executing comorbidity with 20000 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 5.676e-06
Stopped timer 10 at 168.115 (0 MB, 0 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.001e-06
Stopped timer 100 at 0.00198772 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.194e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 1.03e-06
Stopped timer 300 at 385.136 (0 MB, 0 rounds)
Stopped timer 200 at 396.166 (0 MB, 0 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.319e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 9.29e-07
Stopped timer 500 at 405.69 (0 MB, 0 rounds)
Stopped timer 400 at 405.717 (0 MB, 0 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.617e-06
Stopped timer 600 at 18.0454 (0 MB, 0 rounds)
Passing around 122.17 MB in 29129385 rounds, taking 724.29 seconds
Receiving directly 0.004192 MB in 262 rounds, taking 0.176262 seconds
Sending directly 2.08419 MB in 522 rounds, taking 0.0500067 seconds
The following benchmarks are including preprocessing (offline phase).
Time = 988.047 seconds 
Time10 = 168.115 seconds (0 MB, 0 rounds)
Time100 = 0.00198772 seconds (0 MB, 0 rounds)
Time200 = 396.166 seconds (0 MB, 0 rounds)
Time300 = 385.136 seconds (0 MB, 0 rounds)
Time400 = 405.717 seconds (0 MB, 0 rounds)
Time500 = 405.69 seconds (0 MB, 0 rounds)
Time600 = 18.0454 seconds (0 MB, 0 rounds)
Data sent = 124.254 MB in ~29130170 rounds (party 0 only; use '-v' for more details)
Global data sent = 368.602 MB (all parties)
Done
Measure performance for 40000 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 0 comorbidity -pn 13907 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 1 comorbidity -pn 13907 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 2 comorbidity -pn 13907 -h localhost
Using statistical security parameter 40
Executing comorbidity with 40000 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 3.602e-06
Stopped timer 10 at 338.105 (0 MB, 0 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 9.47e-07
Stopped timer 100 at 0.00408723 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.049e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 8.71e-07
Stopped timer 300 at 895.315 (0 MB, 0 rounds)
Stopped timer 200 at 917.825 (0 MB, 0 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.169e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 9.36e-07
Stopped timer 500 at 948.29 (0 MB, 0 rounds)
Stopped timer 400 at 948.34 (0 MB, 0 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.344e-06
Stopped timer 600 at 36.7656 (0 MB, 0 rounds)
Passing around 277.763 MB in 66123113 rounds, taking 1687.85 seconds
Receiving directly 0.008352 MB in 522 rounds, taking 0.0435318 seconds
Sending directly 4.16835 MB in 1042 rounds, taking 0.114756 seconds
The following benchmarks are including preprocessing (offline phase).
Time = 2241.04 seconds 
Time10 = 338.105 seconds (0 MB, 0 rounds)
Time100 = 0.00408723 seconds (0 MB, 0 rounds)
Time200 = 917.825 seconds (0 MB, 0 rounds)
Time300 = 895.315 seconds (0 MB, 0 rounds)
Time400 = 948.34 seconds (0 MB, 0 rounds)
Time500 = 948.29 seconds (0 MB, 0 rounds)
Time600 = 36.7656 seconds (0 MB, 0 rounds)
Data sent = 281.932 MB in ~66124678 rounds (party 0 only; use '-v' for more details)
Global data sent = 837.475 MB (all parties)
Done
Measure performance for 60000 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 0 comorbidity -pn 16874 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 1 comorbidity -pn 16874 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 2 comorbidity -pn 16874 -h localhost
Using statistical security parameter 40
Executing comorbidity with 60000 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 5.07e-06
Stopped timer 10 at 506.421 (0 MB, 0 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.139e-06
Stopped timer 100 at 0.0069862 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.335e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 1.021e-06
Stopped timer 300 at 893.068 (0 MB, 0 rounds)
Stopped timer 200 at 926.132 (0 MB, 0 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.277e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 9.45e-07
Stopped timer 500 at 950.753 (0 MB, 0 rounds)
Stopped timer 400 at 950.825 (0 MB, 0 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.352e-06
Stopped timer 600 at 55.6129 (0 MB, 0 rounds)
Passing around 280.723 MB in 67203113 rounds, taking 1716.03 seconds
Receiving directly 0.012512 MB in 782 rounds, taking 0.0696268 seconds
Sending directly 6.25251 MB in 1562 rounds, taking 0.159809 seconds
The following benchmarks are including preprocessing (offline phase).
Time = 2439 seconds 
Time10 = 506.421 seconds (0 MB, 0 rounds)
Time100 = 0.0069862 seconds (0 MB, 0 rounds)
Time200 = 926.132 seconds (0 MB, 0 rounds)
Time300 = 893.068 seconds (0 MB, 0 rounds)
Time400 = 950.825 seconds (0 MB, 0 rounds)
Time500 = 950.753 seconds (0 MB, 0 rounds)
Time600 = 55.6129 seconds (0 MB, 0 rounds)
Data sent = 286.976 MB in ~67205458 rounds (party 0 only; use '-v' for more details)
Global data sent = 848.447 MB (all parties)
Done
Measure performance for 80000 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 0 comorbidity -pn 11172 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 1 comorbidity -pn 11172 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 2 comorbidity -pn 11172 -h localhost
Using statistical security parameter 40
Executing comorbidity with 80000 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 5.398e-06
Stopped timer 10 at 788.017 (0 MB, 0 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.298e-06
Stopped timer 100 at 0.00972728 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.359e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 1.195e-06
Stopped timer 300 at 2278.24 (0 MB, 0 rounds)
Stopped timer 200 at 2328.72 (0 MB, 0 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.584e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.034e-06
Stopped timer 500 at 2407.77 (0 MB, 0 rounds)
Stopped timer 400 at 2407.88 (0 MB, 0 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.885e-06
Stopped timer 600 at 83.3928 (0 MB, 0 rounds)
Passing around 626.83 MB in 149023465 rounds, taking 4264.32 seconds
Receiving directly 0.016672 MB in 1042 rounds, taking 1.27746 seconds
Sending directly 8.33667 MB in 2082 rounds, taking 0.17644 seconds
The following benchmarks are including preprocessing (offline phase).
Time = 5608.02 seconds 
Time10 = 788.017 seconds (0 MB, 0 rounds)
Time100 = 0.00972728 seconds (0 MB, 0 rounds)
Time200 = 2328.72 seconds (0 MB, 0 rounds)
Time300 = 2278.24 seconds (0 MB, 0 rounds)
Time400 = 2407.88 seconds (0 MB, 0 rounds)
Time500 = 2407.77 seconds (0 MB, 0 rounds)
Time600 = 83.3928 seconds (0 MB, 0 rounds)
Data sent = 635.166 MB in ~149026590 rounds (party 0 only; use '-v' for more details)
Global data sent = 1888.86 MB (all parties)
Done
Measure performance for 100000 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 0 comorbidity -pn 15990 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 1 comorbidity -pn 15990 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 2 comorbidity -pn 15990 -h localhost
Using statistical security parameter 40
Executing comorbidity with 100000 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 6.806e-06
Stopped timer 10 at 989.143 (0 MB, 0 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.182e-06
Stopped timer 100 at 0.0113054 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.356e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 1.04e-06
Stopped timer 300 at 2292.01 (0 MB, 0 rounds)
Stopped timer 200 at 2355.32 (0 MB, 0 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.346e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.037e-06
Stopped timer 500 at 2415.39 (0 MB, 0 rounds)
Stopped timer 400 at 2415.53 (0 MB, 0 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.657e-06
Stopped timer 600 at 104.39 (0 MB, 0 rounds)
Passing around 629.79 MB in 150103465 rounds, taking 4319.9 seconds
Receiving directly 0.020832 MB in 1302 rounds, taking 0.364375 seconds
Sending directly 10.4208 MB in 2602 rounds, taking 0.2424 seconds
The following benchmarks are including preprocessing (offline phase).
Time = 5864.4 seconds 
Time10 = 989.143 seconds (0 MB, 0 rounds)
Time100 = 0.0113054 seconds (0 MB, 0 rounds)
Time200 = 2355.32 seconds (0 MB, 0 rounds)
Time300 = 2292.01 seconds (0 MB, 0 rounds)
Time400 = 2415.53 seconds (0 MB, 0 rounds)
Time500 = 2415.39 seconds (0 MB, 0 rounds)
Time600 = 104.39 seconds (0 MB, 0 rounds)
Data sent = 640.211 MB in ~150107370 rounds (party 0 only; use '-v' for more details)
Global data sent = 1899.83 MB (all parties)
Done
Measure performance for 200000 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 0 comorbidity -pn 12703 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 1 comorbidity -pn 12703 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 2 comorbidity -pn 12703 -h localhost
Using statistical security parameter 40
Executing comorbidity with 200000 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 4.265e-06
Stopped timer 10 at 1648.05 (0 MB, 0 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.249e-06
Stopped timer 100 at 0.0243847 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.071e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 1.048e-06
Stopped timer 300 at 4374.85 (0 MB, 0 rounds)
Stopped timer 200 at 4482.49 (0 MB, 0 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.453e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 9.17e-07
Stopped timer 500 at 4591.37 (0 MB, 0 rounds)
Stopped timer 400 at 4591.6 (0 MB, 0 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.333e-06
Stopped timer 600 at 174.87 (0 MB, 0 rounds)
Passing around 1411.1 MB in 335858537 rounds, taking 8214.22 seconds
Receiving directly 0.041632 MB in 2602 rounds, taking 9.82234 seconds
Sending directly 20.8416 MB in 5202 rounds, taking 0.506857 seconds
The following benchmarks are including preprocessing (offline phase).
Time = 10897 seconds 
Time10 = 1648.05 seconds (0 MB, 0 rounds)
Time100 = 0.0243847 seconds (0 MB, 0 rounds)
Time200 = 4482.49 seconds (0 MB, 0 rounds)
Time300 = 4374.85 seconds (0 MB, 0 rounds)
Time400 = 4591.6 seconds (0 MB, 0 rounds)
Time500 = 4591.37 seconds (0 MB, 0 rounds)
Time600 = 174.87 seconds (0 MB, 0 rounds)
Data sent = 1431.94 MB in ~335866342 rounds (party 0 only; use '-v' for more details)
Global data sent = 4254.22 MB (all parties)
Done
Measure performance for 400000 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 0 plaintext_comorbidity -pn 11794 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 1 plaintext_comorbidity -pn 11794 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 2 plaintext_comorbidity -pn 11794 -h localhost
Using statistical security parameter 40
Executing comorbidity with 400000 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 7.684e-06
Stopped timer 10 at 3944.9 (0 MB, 0 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.168e-06
Stopped timer 100 at 0.0567598 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.344e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 1.217e-06
Stopped timer 300 at 11411.6 (0 MB, 0 rounds)
Stopped timer 200 at 11663 (0 MB, 0 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 2.12e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1.112e-06
Stopped timer 500 at 10918.8 (0 MB, 0 rounds)
Stopped timer 400 at 10919.3 (0 MB, 0 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.714e-06
Stopped timer 600 at 375.999 (0 MB, 0 rounds)
Passing around 3143.06 MB in 747214569 rounds, taking 20398.9 seconds
Receiving directly 0.083232 MB in 5202 rounds, taking 3.20171 seconds
Sending directly 41.6832 MB in 10402 rounds, taking 0.888454 seconds
The following benchmarks are including preprocessing (offline phase).
Time = 26903.2 seconds 
Time10 = 3944.9 seconds (0 MB, 0 rounds)
Time100 = 0.0567598 seconds (0 MB, 0 rounds)
Time200 = 11663 seconds (0 MB, 0 rounds)
Time300 = 11411.6 seconds (0 MB, 0 rounds)
Time400 = 10919.3 seconds (0 MB, 0 rounds)
Time500 = 10918.8 seconds (0 MB, 0 rounds)
Time600 = 375.999 seconds (0 MB, 0 rounds)
Data sent = 3184.75 MB in ~747230174 rounds (party 0 only; use '-v' for more details)
Global data sent = 9471.04 MB (all parties)
Done
Measure performance for 600000 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 0 comorbidity -pn 10188 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 1 comorbidity -pn 10188 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 2 comorbidity -pn 10188 -h localhost
Using statistical security parameter 40
Executing comorbidity with 600000 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 8.174e-06
Stopped timer 10 at 4918.32 (0 MB, 0 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.054e-06
Stopped timer 100 at 0.0749409 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.117e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 9.73e-07
Stopped timer 300 at 21381.6 (0 MB, 0 rounds)
Stopped timer 200 at 21700.4 (0 MB, 0 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.2982e-05
Starting timer 500 at 0 (0 MB, 0 rounds) after 9.64e-07
Stopped timer 500 at 22553.6 (0 MB, 0 rounds)
Stopped timer 400 at 22554.3 (0 MB, 0 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.821e-06
Stopped timer 600 at 525.976 (0 MB, 0 rounds)
Passing around 6933.9 MB in 1643012713 rounds, taking 39712.6 seconds
Receiving directly 0.124832 MB in 7802 rounds, taking 0.844197 seconds
Sending directly 62.5248 MB in 15602 rounds, taking 1.5861 seconds
The following benchmarks are including preprocessing (offline phase).
Time = 49699.1 seconds 
Time10 = 4918.32 seconds (0 MB, 0 rounds)
Time100 = 0.0749409 seconds (0 MB, 0 rounds)
Time200 = 21700.4 seconds (0 MB, 0 rounds)
Time300 = 21381.6 seconds (0 MB, 0 rounds)
Time400 = 22554.3 seconds (0 MB, 0 rounds)
Time500 = 22553.6 seconds (0 MB, 0 rounds)
Time600 = 525.976 seconds (0 MB, 0 rounds)
Data sent = 6996.43 MB in ~1643036118 rounds (party 0 only; use '-v' for more details)
Global data sent = 20864.5 MB (all parties)
Done
Measure performance for 800000 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 0 comorbidity -pn 19261 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 1 comorbidity -pn 19261 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 2 comorbidity -pn 19261 -h localhost
Using statistical security parameter 40
Executing comorbidity with 800000 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 6.132e-06
Stopped timer 10 at 6568.86 (0 MB, 0 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.084e-06
Stopped timer 100 at 0.0912331 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.014e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 9.8e-07
Stopped timer 300 at 21232.9 (0 MB, 0 rounds)
Stopped timer 200 at 21653 (0 MB, 0 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 1.271e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 1e-06
Stopped timer 500 at 22541.6 (0 MB, 0 rounds)
Stopped timer 400 at 22542.5 (0 MB, 0 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.177e-06
Stopped timer 600 at 706.936 (0 MB, 0 rounds)
Passing around 6963.5 MB in 1653812713 rounds, taking 39733.9 seconds
Receiving directly 0.166432 MB in 10402 rounds, taking 3.79019 seconds
Sending directly 83.3664 MB in 20802 rounds, taking 2.12823 seconds
The following benchmarks are including preprocessing (offline phase).
Time = 51471.4 seconds 
Time10 = 6568.86 seconds (0 MB, 0 rounds)
Time100 = 0.0912331 seconds (0 MB, 0 rounds)
Time200 = 21653 seconds (0 MB, 0 rounds)
Time300 = 21232.9 seconds (0 MB, 0 rounds)
Time400 = 22542.5 seconds (0 MB, 0 rounds)
Time500 = 22541.6 seconds (0 MB, 0 rounds)
Time600 = 706.936 seconds (0 MB, 0 rounds)
Data sent = 7046.87 MB in ~1653843918 rounds (party 0 only; use '-v' for more details)
Global data sent = 20974.2 MB (all parties)
Done
Measure performance for 1000000 rows
Compiling high-level code...
Executing the program...
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 0 comorbidity -pn 10224 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 1 comorbidity -pn 10224 -h localhost
Running /home/mpretz/Thesis/MP-SPDZ/Scripts/../replicated-bin-party.x 2 comorbidity -pn 10224 -h localhost
Using statistical security parameter 40
Executing comorbidity with 1000000 rows
Starting timer 10 at 0 (0 MB, 0 rounds) after 8.198e-06
Stopped timer 10 at 8193.97 (0 MB, 0 rounds)
Starting timer 100 at 0 (0 MB, 0 rounds) after 1.105e-06
Stopped timer 100 at 0.12847 (0 MB, 0 rounds)
Starting timer 200 at 0 (0 MB, 0 rounds) after 1.33e-06
Starting timer 300 at 0 (0 MB, 0 rounds) after 9.1e-07
Stopped timer 300 at 21515.5 (0 MB, 0 rounds)
Stopped timer 200 at 22050.1 (0 MB, 0 rounds)
Starting timer 400 at 0 (0 MB, 0 rounds) after 2.088e-06
Starting timer 500 at 0 (0 MB, 0 rounds) after 9.42e-07
Stopped timer 500 at 22722 (0 MB, 0 rounds)
Stopped timer 400 at 22723.1 (0 MB, 0 rounds)
Starting timer 600 at 0 (0 MB, 0 rounds) after 1.239e-06
Stopped timer 600 at 884.609 (0 MB, 0 rounds)
Passing around 6993.1 MB in 1664612713 rounds, taking 40545.7 seconds
Receiving directly 0.208032 MB in 13002 rounds, taking 49.2336 seconds
Sending directly 104.208 MB in 26002 rounds, taking 2.66992 seconds
The following benchmarks are including preprocessing (offline phase).
Time = 53852 seconds 
Time10 = 8193.97 seconds (0 MB, 0 rounds)
Time100 = 0.12847 seconds (0 MB, 0 rounds)
Time200 = 22050.1 seconds (0 MB, 0 rounds)
Time300 = 21515.5 seconds (0 MB, 0 rounds)
Time400 = 22723.1 seconds (0 MB, 0 rounds)
Time500 = 22722 seconds (0 MB, 0 rounds)
Time600 = 884.609 seconds (0 MB, 0 rounds)
Data sent = 7097.31 MB in ~1664651718 rounds (party 0 only; use '-v' for more details)
Global data sent = 21083.9 MB (all parties)
Done